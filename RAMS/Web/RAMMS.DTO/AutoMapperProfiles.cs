using AutoMapper;
using RAMMS.Domain.Models;
using RAMMS.DTO.RequestBO;
using RAMMS.DTO.ResponseBO;
using System;
using System.Collections.Generic;
using System.Text;

namespace RAMMS.DTO
{
    public class AutoMapperProfiles : Profile
    {
        public AutoMapperProfiles()
        {
            MapDTOtoDomainObjects();
            MapDomainObjectsToDTO();
        }

        private void MapDTOtoDomainObjects()
        {

            CreateMap<UserDTO, RmUsers>();
            CreateMap<UserRequestDTO, RmUsers>();
            CreateMap<FormAHeaderRequestDTO, RmFormAHdr>();
            CreateMap<FormXHeaderRequestDTO, RmFormXHdr>();
            CreateMap<FormADetailsRequestDTO, RmFormADtl>();
            CreateMap<AssetListRequestDTO, RmAllassetInventory>();
            CreateMap<RoadMasterResponseDTO, RmRoadMaster>();
            CreateMap<ImageListRequestDTO, RmAssetImageDtl>();
            CreateMap<FormAImageListRequestDTO, RmFormaImageDtl>();
            CreateMap<FormJImageListRequestDTO, RmFormjImageDtl>();
            CreateMap<FormHImageListRequestDTO, RmFormhImageDtl>();
            CreateMap<FormN1HeaderRequestDTO, RmFormN1Hdr>();
            CreateMap<FormN2HeaderRequestDTO, RmFormN2Hdr>();
            CreateMap<FormF2HeaderRequestDTO, RmFormF2GrInsHdr>();
            CreateMap<FormF2DetailRequestDTO, RmFormF2GrInsDtl>();
            CreateMap<FormB1B2HeaderRequestDTO, RmFormB1b2BrInsHdr>();
            CreateMap<FormB1B2DetailRequestDTO, RmFormB1b2BrInsDtl>();
            CreateMap<FormB1B2ImgRequestDTO, RmFormB1b2BrInsImage>();

            CreateMap<FormDHeaderRequestDTO, RmFormDHdr>();
            CreateMap<FormDDetailsRequestDTO, RmFormDDtl>();
            CreateMap<FormDEquipRequestDTO, RmFormDEquipDtl>();
            CreateMap<FormDMaterialDetailsRequestDTO, RmFormDMaterialDtl>();
            CreateMap<FormDLabourDetailsRequestDTO, RmFormDLabourDtl>();
            CreateMap<FormJHeaderRequestDTO, RmFormJHdr>();
            CreateMap<FormJDetailsRequestDTO, RmFormJDtl>();
            CreateMap<FormJHeaderResponseDTO, RmFormJHdr>();
            CreateMap<FormN1HeaderResponseDTO, RmFormN1Hdr>();
            CreateMap<FormN2HeaderResponseDTO, RmFormN2Hdr>();
            CreateMap<FormQa2HeaderRequestDTO, RmFormQa2Hdr>();
            CreateMap<FormQa2DtlRequestDTO, RmFormQa2Dtl>();
            CreateMap<FormS2HeaderRequestDto, RmFormS2Hdr>();
            CreateMap<FormS2DetailRequestDto, RmFormS2Dtl>();
            CreateMap<FormS2QuarterRequestDto, RmFormS2QuarDtl>();
            CreateMap<AssetsListResponseDTO, RmAllassetInventory>();
            CreateMap<DDLookUpDTO, RmDdLookup>();
            CreateMap<AssetFieldDtlResDTO, AssetFieldDtl>();
            CreateMap<FormFSHeaderRequestDTO, RmFormFsInsHdr>();
            CreateMap<FormFSDetailRequestDTO, RmFormFsInsDtl>();
            CreateMap<AssetDefectCodeRequestDTO, RmAssetDefectCode>();
            CreateMap<AccUccImageDtlRequestDTO, RmAccUcuImageDtl>();
            CreateMap<WarImageDtlRequestDTO, RmWarImageDtl>();
            CreateMap<AccUccImageDtlRequestDTO, RmAccUcuImageDtl>();
            CreateMap<FormHRequestDTO, RmFormHHdr>();
            CreateMap<FormHImageRequestDTO, RmFormhImageDtl>();
            CreateMap<AssetInvOtherReqDto, RmAllassetInvOthers>();
            CreateMap<AssetInvOtherResDTO, RmAllassetInvOthers>();
            FormS1HeaderRequestDTO.Config(this);
            FormF4HeaderRequestDTO.Config(this);
            FormF5HeaderRequestDTO.Config(this);
            FormF4DetailRequestDTO.Config(this);
            FormF5DetailRequestDTO.Config(this);
            FormS1DetailDTO.Config(this);
            FormS1WkDtlDTO.Config(this);
            //FormC1C2DTO.Config(this);
            //FormC1C2ImageDTO.Config(this);
            //RmFormCvInsDtDTO.Config(this);
            //RmInspItemMasterDTO.Config(this);
            CreateMap<UserDetailRequestDTO, RmUsers>();
            CreateMap<ModuleGroupRightsRequestDTO, RmModuleGroupRights>();
            CreateMap<AuditActionRequestDTO, RmAuditLogAction>();
            CreateMap<AuditTransactionRequestDTO, RmAuditLogTransaction>();
            CreateMap<DivisionRequestDTO, RmDivisionMaster>();
            CreateMap<RMURequestDTO, RmRmuMaster>();
            CreateMap<DivRmuSectionRequestDTO, RmDivRmuSecMaster>();
            //CreateMap<DivRmuSectionResponseDTO, RmDivRmuSecMaster>();
            CreateMap<SectionRequestDTO, RmDivRmuSecMaster>();
            CreateMap<RoadRequestDTO, RmRoadMaster>();
        }

        private void MapDomainObjectsToDTO()
        {
            CreateMap<RmRmuMaster, RMURequestDTO>()
                .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.RmuPkRefNo))
                .ForMember(x => x.DivCode, options => options.MapFrom(input => input.DivCode))
                .ForMember(x => x.Code, options => options.MapFrom(input => input.RmuCode))
                .ForMember(x => x.Name, options => options.MapFrom(input => input.RmuName))
                .ForMember(x => x.IsActive, options => options.MapFrom(input => input.RmuIsActive));
            CreateMap<RmDivisionMaster, DivisionRequestDTO>()
                .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.DivPkRefNo))
                .ForMember(x => x.Code, options => options.MapFrom(input => input.DivCode))
                .ForMember(x => x.Name, options => options.MapFrom(input => input.DivName))
                .ForMember(x => x.Isactive, options => options.MapFrom(input => input.DivIsActive));

            CreateMap<RmDivRmuSecMaster, DivRmuSectionRequestDTO>()
                .ForMember(x => x.RefNo, options => options.MapFrom(input => input.RdsmPkRefNo))
                .ForMember(x => x.DivCode, options => options.MapFrom(input => input.RdsmDivCode))
                .ForMember(x => x.Division, options => options.MapFrom(input => input.RdsmDivision))
                .ForMember(x => x.RmuCode, options => options.MapFrom(input => input.RdsmRmuCode))
                .ForMember(x => x.RmuName , options => options.MapFrom(input => input.RdsmRmuName))
                .ForMember(x => x.SectionCode, options => options.MapFrom(input => input.RdsmSectionCode))
                .ForMember(x => x.SectionName, options => options.MapFrom(input => input.RdsmSectionName))
                .ForMember(x => x.CrBy, options => options.MapFrom(input => input.RdsmCrBy))
                .ForMember(x => x.CrDt, options => options.MapFrom(input => input.RdsmCrDt))
                .ForMember(x => x.ModBy, options => options.MapFrom(input => input.RdsmModBy))
                .ForMember(x => x.ModDt, options => options.MapFrom(input => input.RdsmModDt))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.RdsmActiveYn)
                );

            CreateMap<RmDivRmuSecMaster, SectionRequestDTO>()
                .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.RdsmPkRefNo))
                .ForMember(x => x.DivCode, options => options.MapFrom(input => input.RdsmDivCode))
                .ForMember(x => x.Division, options => options.MapFrom(input => input.RdsmDivision))
                .ForMember(x => x.RmuCode, options => options.MapFrom(input => input.RdsmRmuCode))
                .ForMember(x => x.RmuName, options => options.MapFrom(input => input.RdsmRmuName))
                .ForMember(x => x.SectionCode, options => options.MapFrom(input => input.RdsmSectionCode))
                .ForMember(x => x.SectionName, options => options.MapFrom(input => input.RdsmSectionName))
                .ForMember(x => x.CrBy, options => options.MapFrom(input => input.RdsmCrBy))
                .ForMember(x => x.CrDt, options => options.MapFrom(input => input.RdsmCrDt))
                .ForMember(x => x.ModBy, options => options.MapFrom(input => input.RdsmModBy))
                .ForMember(x => x.ModDt, options => options.MapFrom(input => input.RdsmModDt))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.RdsmActiveYn)
                );

            CreateMap<RmRoadMaster, RoadRequestDTO>()
                .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.RdmPkRefNo))
                .ForMember(x => x.FeatureId, options => options.MapFrom(input => input.RdmFeatureId))
                .ForMember(x => x.DivCode, options => options.MapFrom(input => input.RdmDivCode))
                .ForMember(x => x.RmuCode, options => options.MapFrom(input => input.RdmRmuCode))
                .ForMember(x => x.SecName, options => options.MapFrom(input => input.RdmSecName))
                .ForMember(x => x.RdCatgName, options => options.MapFrom(input => input.RdmRdCatgName))
                .ForMember(x => x.RdCatgCode, options => options.MapFrom(input => input.RdmRdCatgCode))
                .ForMember(x => x.RdCode , options => options.MapFrom(input => input.RdmRdCode))
                .ForMember(x => x.RdName, options => options.MapFrom(input => input.RdmRdName))
                .ForMember(x => x.FrmLoc, options => options.MapFrom(input => input.RdmFrmLoc))
                .ForMember(x => x.ToLoc, options => options.MapFrom(input => input.RdmToLoc))
                .ForMember(x => x.FrmCh, options => options.MapFrom(input => input.RdmFrmCh))
                .ForMember(x => x.FrmChDeci, options => options.MapFrom(input => input.RdmFrmChDeci))
                .ForMember(x => x.ToCh, options => options.MapFrom(input => input.RdmToCh))
                .ForMember(x => x.ToChDeci, options => options.MapFrom(input => input.RdmToChDeci))
                .ForMember(x => x.LengthPaved, options => options.MapFrom(input => input.RdmLengthPaved))
                .ForMember(x => x.LengthUnpaved, options => options.MapFrom(input => input.RdmLengthUnpaved))
                .ForMember(x => x.Owner, options => options.MapFrom(input => input.RdmOwner))
                .ForMember(x => x.ModBy, options => options.MapFrom(input => input.RdmModBy))
                .ForMember(x => x.ModDt, options => options.MapFrom(input => input.RdmModDt))
                .ForMember(x => x.CrBy, options => options.MapFrom(input => input.RdmCrBy))
                .ForMember(x => x.CrDt, options => options.MapFrom(input => input.RdmCrDt))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.RdmActiveYn))
                .ForMember(x => x.SecCode, options => options.MapFrom(input => input.RdmSecCode))
                .ForMember(x => x.RmuName, options => options.MapFrom(input => input.RdmRmuName))
                .ForMember(x => x.RdCdSort, options => options.MapFrom(input => input.RdmRdCdSort));

            CreateMap<RmAuditLogTransaction, AuditTransactionRequestDTO>()
                .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.AltPkRefNo))
                .ForMember(x => x.AlaPkRefNo, options => options.MapFrom(input => input.AltAlaPkRefNo))
                .ForMember(x => x.Transactionname, options => options.MapFrom(input => input.AltTransactionName))
                .ForMember(x => x.Tablename, options => options.MapFrom(input => input.AltTableName))
                .ForMember(x => x.Transactindetails, options => options.MapFrom(input => input.AltTransactinDetails));

            CreateMap<RmAuditLogAction, AuditActionRequestDTO>()
                .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.AlaPkRefNo))
                .ForMember(x => x.Requestip, options => options.MapFrom(input => input.AlaRequestIp))
                .ForMember(x => x.Requester, options => options.MapFrom(input => input.AlaRequester))
                .ForMember(x => x.Actionname, options => options.MapFrom(input => input.AlaActionName))
                .ForMember(x => x.CrDt, options => options.MapFrom(input => input.AlaCrDt))
                .ForMember(x => x.CrBy, options => options.MapFrom(input => input.AlaCrBy));
            CreateMap<RmModuleGroupRights, ModuleGroupRightsRequestDTO>()
                .ForMember(x => x.MgrPkid, options => options.MapFrom(input => input.MgrPkId))
                .ForMember(x => x.ModPkid, options => options.MapFrom(input => input.ModPkId))
                .ForMember(x => x.Ugpkid, options => options.MapFrom(input => input.UgPkId))
                .ForMember(x => x.DvIsview, options => options.MapFrom(input => input.DvIsView))
                .ForMember(x => x.DvIsmodify, options => options.MapFrom(input => input.DvIsModify))
                .ForMember(x => x.DvIsdelete, options => options.MapFrom(input => input.DvIsDelete))
                .ForMember(x => x.PcIsview, options => options.MapFrom(input => input.PcIsView))
                .ForMember(x => x.PcIsmodify, options => options.MapFrom(input => input.PcIsModify))
                .ForMember(x => x.PcIsdelete, options => options.MapFrom(input => input.PcIsDelete))
                .ForMember(x => x.MgrCreatedby, options => options.MapFrom(input => input.MgrCreatedBy))
                .ForMember(x => x.MgrCreatedon, options => options.MapFrom(input => input.MgrCreatedOn))
                .ForMember(x => x.MgrModifiedby, options => options.MapFrom(input => input.MgrModifiedBy))
                .ForMember(x => x.MgrModifiedon, options => options.MapFrom(input => input.MgrModifiedOn))
                .ForMember(x => x.DvIsadd, options => options.MapFrom(input => input.DvIsAdd))
                .ForMember(x => x.PcIsadd, options => options.MapFrom(input => input.PcIsAdd));
            CreateMap<RmUsers, UserDetailRequestDTO>().ForMember(x => x.PkId, options => options.MapFrom(input => input.UsrPkId))
                .ForMember(x => x.ContrPkId, options => options.MapFrom(input => input.UsrContrPkId))
                .ForMember(x => x.Username, options => options.MapFrom(input => input.UsrUserName))
                .ForMember(x => x.Password, options => options.MapFrom(input => input.UsrPassword))
                .ForMember(x => x.Position, options => options.MapFrom(input => input.UsrPosition))
                .ForMember(x => x.Department, options => options.MapFrom(input => input.UsrDepartment))
                .ForMember(x => x.Companyname, options => options.MapFrom(input => input.UsrCompanyName))
                .ForMember(x => x.Email, options => options.MapFrom(input => input.UsrEmail))
                .ForMember(x => x.Contactno, options => options.MapFrom(input => input.UsrContactNo))
                .ForMember(x => x.ReportingPkId, options => options.MapFrom(input => input.UsrReportingUsrPkId))
                .ForMember(x => x.ModBy, options => options.MapFrom(input => input.UsrModBy))
                .ForMember(x => x.ModDt, options => options.MapFrom(input => input.UsrModDt))
                .ForMember(x => x.CrBy, options => options.MapFrom(input => input.UsrCrBy))
                .ForMember(x => x.CrDt, options => options.MapFrom(input => input.UsrCrDt))
                .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.UsrSubmitSts))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.UsrActiveYn))
                .ForMember(x => x.Logindate, options => options.MapFrom(input => input.UsrLoginDate))
                .ForMember(x => x.Isdisabled, options => options.MapFrom(input => input.UsrIsDisabled))
                .ForMember(x => x.Retrycount, options => options.MapFrom(input => input.UsrRetryCount))
                .ForMember(x => x.Lockeduntil, options => options.MapFrom(input => input.UsrLockedUntil))
                .ForMember(x => x.Passwordexpiry, options => options.MapFrom(input => input.UsrPasswordExpiry))
                .ForMember(x => x.DfltUserrole, options => options.MapFrom(input => input.UsrDfltUserRole))
                .ForMember(x => x.UgDfltYn, options => options.MapFrom(input => input.UsrUgDfltYn))
                .ForMember(x => x.Sign, options => options.MapFrom(input => input.UsrSign))
                .ForMember(x => x.Userid, options => options.MapFrom(input => input.UsrUserid))
                .ForMember(x => x.ForceRstPwd, options => options.MapFrom(input => input.UsrForceRstPwd));
            CreateMap<RmFormFsInsDtl, FormFSDetailRequestDTO>().ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.FsdPkRefNo)).ForMember(x => x.FshPkRefNo, options => options.MapFrom(input => input.FsdFshPkRefNo)).ForMember(x => x.Feature, options => options.MapFrom(input => input.FsdFeature)).ForMember(x => x.GrpType, options => options.MapFrom(input => input.FsdGrpType)).ForMember(x => x.StrucCode, options => options.MapFrom(input => input.FsdStrucCode)).ForMember(x => x.Width, options => options.MapFrom(input => input.FsdWidth)).ForMember(x => x.Length, options => options.MapFrom(input => input.FsdLength)).ForMember(x => x.Condition1, options => options.MapFrom(input => input.FsdCondition1)).ForMember(x => x.Condition2, options => options.MapFrom(input => input.FsdCondition2)).ForMember(x => x.Condition3, options => options.MapFrom(input => input.FsdCondition3)).ForMember(x => x.Needed, options => options.MapFrom(input => input.FsdNeeded)).ForMember(x => x.Unit, options => options.MapFrom(input => input.FsdUnit)).ForMember(x => x.Remarks, options => options.MapFrom(input => input.FsdRemarks)).ForMember(x => x.ModBy, options => options.MapFrom(input => input.FsdModBy)).ForMember(x => x.ModDt, options => options.MapFrom(input => input.FsdModDt)).ForMember(x => x.CrBy, options => options.MapFrom(input => input.FsdCrBy)).ForMember(x => x.CrDt, options => options.MapFrom(input => input.FsdCrDt)).ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FsdSubmitSts)).ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FsdActiveYn));
            
            CreateMap<RmFormFsInsHdr, FormFSHeaderRequestDTO>().ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.FshPkRefNo)).ForMember(x => x.DivCode, options => options.MapFrom(input => input.FshDivCode)).ForMember(x => x.Dist, options => options.MapFrom(input => input.FshDist)).ForMember(x => x.RmuName, options => options.MapFrom(input => input.FshRmuName)).ForMember(x => x.RoadId, options => options.MapFrom(input => input.FshRoadId)).ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FshRoadCode)).ForMember(x => x.RoadName, options => options.MapFrom(input => input.FshRoadName)).ForMember(x => x.RoadLength, options => options.MapFrom(input => input.FshRoadLength)).ForMember(x => x.YearOfInsp, options => options.MapFrom(input => input.FshYearOfInsp)).ForMember(x => x.UserIdInspBy, options => options.MapFrom(input => input.FshUserIdInspBy)).ForMember(x => x.UserNameInspBy, options => options.MapFrom(input => input.FshUserNameInspBy)).ForMember(x => x.UserDesignationInspY, options => options.MapFrom(input => input.FshUserDesignationInspY)).ForMember(x => x.DtInspBy, options => options.MapFrom(input => input.FshDtInspBy)).ForMember(x => x.SignpathInspBy, options => options.MapFrom(input => input.FshSignpathInspBy)).ForMember(x => x.FormRefId, options => options.MapFrom(input => input.FshFormRefId)).ForMember(x => x.CrewLeaderId, options => options.MapFrom(input => input.FshCrewLeaderId)).ForMember(x => x.CrewLeaderName, options => options.MapFrom(input => input.FshCrewLeaderName)).ForMember(x => x.UserIdSmzdBy, options => options.MapFrom(input => input.FshUserIdSmzdBy)).ForMember(x => x.UserNameSmzdBy, options => options.MapFrom(input => input.FshUserNameSmzdBy)).ForMember(x => x.UserDesignationSmzdY, options => options.MapFrom(input => input.FshUserDesignationSmzdY)).ForMember(x => x.DtSmzdBy, options => options.MapFrom(input => input.FshDtSmzdBy)).ForMember(x => x.SignpathSmzdBy, options => options.MapFrom(input => input.FshSignpathSmzdBy)).ForMember(x => x.UserIdChckdBy, options => options.MapFrom(input => input.FshUserIdChckdBy)).ForMember(x => x.UserNameChckdBy, options => options.MapFrom(input => input.FshUserNameChckdBy)).ForMember(x => x.UserDesignationChckdBy, options => options.MapFrom(input => input.FshUserDesignationChckdBy)).ForMember(x => x.DtChckdBy, options => options.MapFrom(input => input.FshDtChckdBy)).ForMember(x => x.SignpathChckdBy, options => options.MapFrom(input => input.FshSignpathChckdBy)).ForMember(x => x.ModBy, options => options.MapFrom(input => input.FshModBy)).ForMember(x => x.ModDt, options => options.MapFrom(input => input.FshModDt)).ForMember(x => x.CrBy, options => options.MapFrom(input => input.FshCrBy)).ForMember(x => x.CrDt, options => options.MapFrom(input => input.FshCrDt)).ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FshSubmitSts)).ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FshActiveYn)).ForMember(x => x.Status, options => options.MapFrom(input => input.FshStatus)).ForMember(x => x.AuditLog, options => options.MapFrom(input => input.FshAuditLog));
            
            CreateMap<RmFormS2QuarDtl, FormS2QuarterRequestDto>()
                .ForMember(x => x.ClkPkRefNo, options => options.MapFrom(input => input.FsiiqdClkPkRefNo))
                .ForMember(x => x.CrBy, options => options.MapFrom(input => input.FsiiqdCrBy))
                .ForMember(x => x.CrDt, options => options.MapFrom(input => input.FsiiqdCrDt))
                .ForMember(x => x.FsiidPkRefNo, options => options.MapFrom(input => input.FsiiqdFsiidPkRefNo))
                .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.FsiiqdPkRefNo));
            CreateMap<RmFormB1b2BrInsHdr, FormB1B2HeaderRequestDTO>().ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.FbrihPkRefNo)).ForMember(x => x.AiPkRefNo, options => options.MapFrom(input => input.FbrihAiPkRefNo)).ForMember(x => x.AiAssetId, options => options.MapFrom(input => input.FbrihAiAssetId)).ForMember(x => x.AiLocChKm, options => options.MapFrom(input => input.FbrihAiLocChKm)).ForMember(x => x.AiLocChM, options => options.MapFrom(input => input.FbrihAiLocChM)).ForMember(x => x.AiStrucCode, options => options.MapFrom(input => input.FbrihAiStrucCode)).ForMember(x => x.AiGpsEasting, options => options.MapFrom(input => input.FbrihAiGpsEasting)).ForMember(x => x.AiGpsNorthing, options => options.MapFrom(input => input.FbrihAiGpsNorthing)).ForMember(x => x.AiRdCode, options => options.MapFrom(input => input.FbrihAiRdCode)).ForMember(x => x.AiRdName, options => options.MapFrom(input => input.FbrihAiRdName)).ForMember(x => x.AiRiverName, options => options.MapFrom(input => input.FbrihAiRiverName)).ForMember(x => x.AiDivCode, options => options.MapFrom(input => input.FbrihAiDivCode)).ForMember(x => x.AiRmuName, options => options.MapFrom(input => input.FbrihAiRmuName)).ForMember(x => x.AiStrucSuper, options => options.MapFrom(input => input.FbrihAiStrucSuper)).ForMember(x => x.AiParapetType, options => options.MapFrom(input => input.FbrihAiParapetType)).ForMember(x => x.AiBearingType, options => options.MapFrom(input => input.FbrihAiBearingType)).ForMember(x => x.AiExpanType, options => options.MapFrom(input => input.FbrihAiExpanType)).ForMember(x => x.AiDeckType, options => options.MapFrom(input => input.FbrihAiDeckType)).ForMember(x => x.AiAbutType, options => options.MapFrom(input => input.FbrihAiAbutType)).ForMember(x => x.AiPierType, options => options.MapFrom(input => input.FbrihAiPierType)).ForMember(x => x.AiExpanJointCount, options => options.MapFrom(input => input.FbrihAiExpanJointCount)).ForMember(x => x.AiWidthLane, options => options.MapFrom(input => input.FbrihAiWidthLane)).ForMember(x => x.AiLengthSpan, options => options.MapFrom(input => input.FbrihAiLengthSpan)).ForMember(x => x.AiLength, options => options.MapFrom(input => input.FbrihAiLength)).ForMember(x => x.AiWidth, options => options.MapFrom(input => input.FbrihAiWidth)).ForMember(x => x.AiLaneCnt, options => options.MapFrom(input => input.FbrihAiLaneCnt)).ForMember(x => x.AiSpanCnt, options => options.MapFrom(input => input.FbrihAiSpanCnt)).ForMember(x => x.AiMedian, options => options.MapFrom(input => input.FbrihAiMedian)).ForMember(x => x.AiWalkway, options => options.MapFrom(input => input.FbrihAiWalkway)).ForMember(x => x.CInspRefNo, options => options.MapFrom(input => input.FbrihCInspRefNo)).ForMember(x => x.YearOfInsp, options => options.MapFrom(input => input.FbrihYearOfInsp)).ForMember(x => x.DtOfInsp, options => options.MapFrom(input => input.FbrihDtOfInsp)).ForMember(x => x.RecordNo, options => options.MapFrom(input => input.FbrihRecordNo)).ForMember(x => x.SerProviderDefObs, options => options.MapFrom(input => input.FbrihSerProviderDefObs)).ForMember(x => x.AuthDefObs, options => options.MapFrom(input => input.FbrihAuthDefObs)).ForMember(x => x.SerProviderDefGenCom, options => options.MapFrom(input => input.FbrihSerProviderDefGenCom)).ForMember(x => x.AuthDefGenCom, options => options.MapFrom(input => input.FbrihAuthDefGenCom)).ForMember(x => x.SerProviderDefFeedback, options => options.MapFrom(input => input.FbrihSerProviderDefFeedback)).ForMember(x => x.AuthDefFeedback, options => options.MapFrom(input => input.FbrihAuthDefFeedback)).ForMember(x => x.SerProviderUserId, options => options.MapFrom(input => input.FbrihSerProviderUserId)).ForMember(x => x.SerProviderUserName, options => options.MapFrom(input => input.FbrihSerProviderUserName)).ForMember(x => x.SerProviderUserDesignation, options => options.MapFrom(input => input.FbrihSerProviderUserDesignation)).ForMember(x => x.SerProviderInsDt, options => options.MapFrom(input => input.FbrihSerProviderInsDt)).ForMember(x => x.SignpathSerProvider, options => options.MapFrom(input => input.FbrihSignpathSerProvider)).ForMember(x => x.UserIdAud, options => options.MapFrom(input => input.FbrihUserIdAud)).ForMember(x => x.UserNameAud, options => options.MapFrom(input => input.FbrihUserNameAud)).ForMember(x => x.UserDesignationAud, options => options.MapFrom(input => input.FbrihUserDesignationAud)).ForMember(x => x.DtAud, options => options.MapFrom(input => input.FbrihDtAud)).ForMember(x => x.SignpathAud, options => options.MapFrom(input => input.FbrihSignpathAud)).ForMember(x => x.BridgeConditionRat, options => options.MapFrom(input => input.FbrihBridgeConditionRat)).ForMember(x => x.ReqFurtherInv, options => options.MapFrom(input => input.FbrihReqFurtherInv)).ForMember(x => x.ModBy, options => options.MapFrom(input => input.FbrihModBy)).ForMember(x => x.ModDt, options => options.MapFrom(input => input.FbrihModDt)).ForMember(x => x.CrBy, options => options.MapFrom(input => input.FbrihCrBy)).ForMember(x => x.CrDt, options => options.MapFrom(input => input.FbrihCrDt)).ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FbrihSubmitSts)).ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FbrihActiveYn)).ForMember(x => x.Status, options => options.MapFrom(input => input.FbrihStatus)).ForMember(x => x.AuditLog, options => options.MapFrom(input => input.FbrihAuditLog));
          
            
            
            CreateMap<RmFormB1b2BrInsDtl, FormB1B2DetailRequestDTO>()
                 .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.FbridPkRefNo))
                 .ForMember(x => x.FbrihPkRefNo, options => options.MapFrom(input => input.FbridFbrihPkRefNo))
                 .ForMember(x => x.AbutFoundMat, options => options.MapFrom(input => input.FbridAbutFoundMat))
                 .ForMember(x => x.AbutFoundMatCode, options => options.MapFrom(input => input.FbridAbutFoundMatCode))
                 .ForMember(x => x.AbutFoundInspCode, options => options.MapFrom(input => input.FbridAbutFoundInspCode))
                 .ForMember(x => x.AbutFoundDistress, options => options.MapFrom(input => input.FbridAbutFoundDistress))
                 .ForMember(x => x.AbutFoundSeverity, options => options.MapFrom(input => input.FbridAbutFoundSeverity))
                 .ForMember(x => x.PiersPrimCompMat, options => options.MapFrom(input => input.FbridPiersPrimCompMat))
                 .ForMember(x => x.PiersPrimCompMatCode, options => options.MapFrom(input => input.FbridPiersPrimCompMatCode)).ForMember(x => x.PiersPrimCompInspCode, options => options.MapFrom(input => input.FbridPiersPrimCompInspCode)).ForMember(x => x.PiersPrimCompDistress, options => options.MapFrom(input => input.FbridPiersPrimCompDistress)).ForMember(x => x.PiersPrimCompSeverity, options => options.MapFrom(input => input.FbridPiersPrimCompSeverity)).ForMember(x => x.BearingStDiaphgMat, options => options.MapFrom(input => input.FbridBearingStDiaphgMat)).ForMember(x => x.BearingStDiaphgMatCode, options => options.MapFrom(input => input.FbridBearingStDiaphgMatCode)).ForMember(x => x.BearingStDiaphgInspCode, options => options.MapFrom(input => input.FbridBearingStDiaphgInspCode)).ForMember(x => x.BearingStDiaphgDistress, options => options.MapFrom(input => input.FbridBearingStDiaphgDistress)).ForMember(x => x.BearingStDiaphgSeverity, options => options.MapFrom(input => input.FbridBearingStDiaphgSeverity)).ForMember(x => x.BeamsGridTrusArch, options => options.MapFrom(input => input.FbridBeamsGridTrusArch)).ForMember(x => x.BeamsGridTrusArchCode, options => options.MapFrom(input => input.FbridBeamsGridTrusArchCode)).ForMember(x => x.BeamsGridTrusArchInspCode, options => options.MapFrom(input => input.FbridBeamsGridTrusArchInspCode)).ForMember(x => x.BeamsGridTrusArchDistress, options => options.MapFrom(input => input.FbridBeamsGridTrusArchDistress)).ForMember(x => x.BeamsGridTrusArchSeverity, options => options.MapFrom(input => input.FbridBeamsGridTrusArchSeverity)).ForMember(x => x.DeckPavement, options => options.MapFrom(input => input.FbridDeckPavement)).ForMember(x => x.DeckPavementCode, options => options.MapFrom(input => input.FbridDeckPavementCode)).ForMember(x => x.DeckPavementCodeInspCode, options => options.MapFrom(input => input.FbridDeckPavementCodeInspCode)).ForMember(x => x.DeckPavementDistress, options => options.MapFrom(input => input.FbridDeckPavementDistress)).ForMember(x => x.DeckPavementSeverity, options => options.MapFrom(input => input.FbridDeckPavementSeverity)).ForMember(x => x.Utilities, options => options.MapFrom(input => input.FbridUtilities)).ForMember(x => x.UtilitiesCode, options => options.MapFrom(input => input.FbridUtilitiesCode)).ForMember(x => x.UtilitiesInspCode, options => options.MapFrom(input => input.FbridUtilitiesInspCode)).ForMember(x => x.UtilitiesDistress, options => options.MapFrom(input => input.FbridUtilitiesDistress)).ForMember(x => x.UtilitiesSeverity, options => options.MapFrom(input => input.FbridUtilitiesSeverity)).ForMember(x => x.Waterway, options => options.MapFrom(input => input.FbridWaterway)).ForMember(x => x.WaterwayCode, options => options.MapFrom(input => input.FbridWaterwayCode)).ForMember(x => x.WaterwayInspCode, options => options.MapFrom(input => input.FbridWaterwayInspCode)).ForMember(x => x.WaterwayDistress, options => options.MapFrom(input => input.FbridWaterwayDistress)).ForMember(x => x.WaterwaySeverity, options => options.MapFrom(input => input.FbridWaterwaySeverity)).ForMember(x => x.WaterDownpipe, options => options.MapFrom(input => input.FbridWaterDownpipe)).ForMember(x => x.WaterDownpipeCode, options => options.MapFrom(input => input.FbridWaterDownpipeCode)).ForMember(x => x.WaterDownpipeInspCode, options => options.MapFrom(input => input.FbridWaterDownpipeInspCode)).ForMember(x => x.WaterDownpipeDistress, options => options.MapFrom(input => input.FbridWaterDownpipeDistress)).ForMember(x => x.WaterDownpipeSeverity, options => options.MapFrom(input => input.FbridWaterDownpipeSeverity)).ForMember(x => x.ParapetRailing, options => options.MapFrom(input => input.FbridParapetRailing)).ForMember(x => x.ParapetRailingCode, options => options.MapFrom(input => input.FbridParapetRailingCode)).ForMember(x => x.ParapetRailingInspCode, options => options.MapFrom(input => input.FbridParapetRailingInspCode)).ForMember(x => x.ParapetRailingDistress, options => options.MapFrom(input => input.FbridParapetRailingDistress)).ForMember(x => x.ParapetRailingSeverity, options => options.MapFrom(input => input.FbridParapetRailingSeverity)).ForMember(x => x.SidewalksAppSlab, options => options.MapFrom(input => input.FbridSidewalksAppSlab)).ForMember(x => x.SidewalksAppSlabCode, options => options.MapFrom(input => input.FbridSidewalksAppSlabCode)).ForMember(x => x.SidewalksAppSlabInspCode, options => options.MapFrom(input => input.FbridSidewalksAppSlabInspCode)).ForMember(x => x.SidewalksAppSlabDistress, options => options.MapFrom(input => input.FbridSidewalksAppSlabDistress)).ForMember(x => x.SidewalksAppSlabSeverity, options => options.MapFrom(input => input.FbridSidewalksAppSlabSeverity)).ForMember(x => x.ExpanJoint, options => options.MapFrom(input => input.FbridExpanJoint)).ForMember(x => x.ExpanJointCode, options => options.MapFrom(input => input.FbridExpanJointCode)).ForMember(x => x.ExpanJointInspCode, options => options.MapFrom(input => input.FbridExpanJointInspCode)).ForMember(x => x.ExpanJointDistress, options => options.MapFrom(input => input.FbridExpanJointDistress)).ForMember(x => x.ExpanJointSeverity, options => options.MapFrom(input => input.FbridExpanJointSeverity)).ForMember(x => x.SlopeRetainWall, options => options.MapFrom(input => input.FbridSlopeRetainWall)).ForMember(x => x.SlopeRetainWallCode, options => options.MapFrom(input => input.FbridSlopeRetainWallCode)).ForMember(x => x.SlopeRetainWallInspCode, options => options.MapFrom(input => input.FbridSlopeRetainWallInspCode)).ForMember(x => x.SlopeRetainWallDistress, options => options.MapFrom(input => input.FbridSlopeRetainWallDistress)).ForMember(x => x.SlopeRetainWallSeverity, options => options.MapFrom(input => input.FbridSlopeRetainWallSeverity)).ForMember(x => x.ModBy, options => options.MapFrom(input => input.FbridModBy)).ForMember(x => x.ModDt, options => options.MapFrom(input => input.FbridModDt)).ForMember(x => x.CrBy, options => options.MapFrom(input => input.FbridCrBy)).ForMember(x => x.CrDt, options => options.MapFrom(input => input.FbridCrDt)).ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FbridSubmitSts))
                 .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FbridActiveYn))
                 .ForMember(x => x.AbutFoundDistressOthers, options => options.MapFrom(input => input.FbridAbutFoundDistressOthers))
                 .ForMember(x => x.BeamsGridTrusArchDistressOthers, options => options.MapFrom(input => input.FbridBeamsGridTrusArchDistressOthers))
                 .ForMember(x => x.BearingStDiaphgDistressOthers, options => options.MapFrom(input => input.FbridBearingStDiaphgDistressOthers))
                 .ForMember(x => x.DeckPavementDistressOthers, options => options.MapFrom(input => input.FbridDeckPavementDistressOthers))
                 .ForMember(x => x.ExpanJointDistressOthers, options => options.MapFrom(input => input.FbridExpanJointDistressOthers))
                 .ForMember(x => x.ParapetRailingDistressOthers, options => options.MapFrom(input => input.FbridParapetRailingDistressOthers))
                 .ForMember(x => x.PiersPrimCompDistressOthers, options => options.MapFrom(input => input.FbridPiersPrimCompDistressOthers))
                 .ForMember(x => x.SidewalksAppSlabDistressOthers, options => options.MapFrom(input => input.FbridSidewalksAppSlabDistressOthers))
                 .ForMember(x => x.SlopeRetainWallDistressOthers, options => options.MapFrom(input => input.FbridSlopeRetainWallDistressOthers))
                 .ForMember(x => x.UtilitiesDistressOthers, options => options.MapFrom(input => input.FbridUtilitiesDistressOthers))
                 .ForMember(x => x.WaterDownpipeDistressOthers, options => options.MapFrom(input => input.FbridWaterDownpipeDistressOthers))
                 .ForMember(x => x.WaterwayDistressOthers, options => options.MapFrom(input => input.FbridWaterwayDistressOthers)); ;
            CreateMap<RmFormB1b2BrInsImage, FormB1B2ImgRequestDTO>().ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.FbriPkRefNo)).ForMember(x => x.FbrihPkRefNo, options => options.MapFrom(input => input.FbriFbrihPkRefNo)).ForMember(x => x.ImgRefId, options => options.MapFrom(input => input.FbriImgRefId)).ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.FbriImageTypeCode)).ForMember(x => x.ImageSrno, options => options.MapFrom(input => input.FbriImageSrno)).ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.FbriImageFilenameSys)).ForMember(x => x.ImageFilenameUpload, options => options.MapFrom(input => input.FbriImageFilenameUpload)).ForMember(x => x.ImageUserFilepath, options => options.MapFrom(input => input.FbriImageUserFilePath)).ForMember(x => x.ModBy, options => options.MapFrom(input => input.FbriModBy)).ForMember(x => x.ModDt, options => options.MapFrom(input => input.FbriModDt)).ForMember(x => x.CrBy, options => options.MapFrom(input => input.FbriCrBy)).ForMember(x => x.CrDt, options => options.MapFrom(input => input.FbriCrDt)).ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FbriSubmitSts)).ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FbriActiveYn));
            CreateMap<RmFormF2GrInsDtl, FormF2DetailRequestDTO>()
                .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.FgridPkRefNo))
                .ForMember(x => x.FgrihPkRefNo, options => options.MapFrom(input => input.FgridFgrihPkRefNo))
                .ForMember(x => x.FgrihAiPkRefNo, options => options.MapFrom(input => input.FgrihAiPkRefNo))
                .ForMember(x => x.StartingChKm, options => options.MapFrom(input => input.FgridStartingChKm))
                .ForMember(x => x.StartingChM, options => options.MapFrom(input => input.FgridStartingChM))
                .ForMember(x => x.GrCode, options => options.MapFrom(input => input.FgridGrCode))
                .ForMember(x => x.GrCondition1, options => options.MapFrom(input => input.FgridGrCondition1))
                .ForMember(x => x.GrCondition2, options => options.MapFrom(input => input.FgridGrCondition2))
                .ForMember(x => x.GrCondition3, options => options.MapFrom(input => input.FgridGrCondition3))
                .ForMember(x => x.RhsMLhs, options => options.MapFrom(input => input.FgridRhsMLhs))
                .ForMember(x => x.PostSpac, options => options.MapFrom(input => input.FgridPostSpac))
                .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FgridRemarks))
                .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FgridModBy))
                .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FgridModDt))
                .ForMember(x => x.CrBy, options => options.MapFrom(input => input.FgridCrBy))
                .ForMember(x => x.CrDt, options => options.MapFrom(input => input.FgridCrDt))
                .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FgridSubmitSts))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FgridActiveYn))
                .ForMember(x => x.Length, options => options.MapFrom(input => input.FgridLength));

            CreateMap<RmFormF2GrInsHdr, FormF2HeaderRequestDTO>()
                .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.FgrihPkRefNo))
                .ForMember(x => x.DivCode, options => options.MapFrom(input => input.FgrihDivCode))
                .ForMember(x => x.Dist, options => options.MapFrom(input => input.FgrihDist))
                .ForMember(x => x.RoadId, options => options.MapFrom(input => input.FgrihRoadId))
                .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FgrihRoadCode))
                .ForMember(x => x.RoadName, options => options.MapFrom(input => input.FgrihRoadName))
                .ForMember(x => x.RoadLength, options => options.MapFrom(input => input.FgrihRoadLength))
                .ForMember(x => x.YearOfInsp, options => options.MapFrom(input => input.FgrihYearOfInsp))
                .ForMember(x => x.DtOfInsp, options => options.MapFrom(input => input.FgrihDtOfInsp))
                .ForMember(x => x.UserIdInspBy, options => options.MapFrom(input => input.FgrihUserIdInspBy))
                .ForMember(x => x.UserNameInspBy, options => options.MapFrom(input => input.FgrihUserNameInspBy))
                .ForMember(x => x.UserDesignationInspBy, options => options.MapFrom(input => input.FgrihUserDesignationInspBy))
                .ForMember(x => x.DtInspBy, options => options.MapFrom(input => input.FgrihDtInspBy))
                .ForMember(x => x.SignpathInspBy, options => options.MapFrom(input => input.FgrihSignpathInspBy))
                .ForMember(x => x.FormRefId, options => options.MapFrom(input => input.FgrihFormRefId))
                .ForMember(x => x.CrewLeaderId, options => options.MapFrom(input => input.FgrihCrewLeaderId))
                .ForMember(x => x.CrewLeaderName, options => options.MapFrom(input => input.FgrihCrewLeaderName))
                .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FgrihModBy))
                .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FgrihModDt))
                .ForMember(x => x.CrBy, options => options.MapFrom(input => input.FgrihCrBy))
                .ForMember(x => x.CrDt, options => options.MapFrom(input => input.FgrihCrDt))
                .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FgrihSubmitSts))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FgrihActiveYn))
                .ForMember(x => x.Status, options => options.MapFrom(input => input.FgrihStatus))
                .ForMember(x => x.AuditLog, options => options.MapFrom(input => input.FgrihAuditLog)
                );

            CreateMap<RmFormS2Hdr, FormS2HeaderRequestDto>()
                .ForMember(x => x.ActId, options => options.MapFrom(input => input.FsiihActId))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FsiihActiveYn))
                .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FsiihContNo))
                .ForMember(x => x.CrBy, options => options.MapFrom(input => input.FsiihCrBy))
                .ForMember(x => x.CrDt, options => options.MapFrom(input => input.FsiihCrDt))
                .ForMember(x => x.DtAgrd, options => options.MapFrom(input => input.FsiihDtAgrd))
                .ForMember(x => x.DtPrioritised, options => options.MapFrom(input => input.FsiihDtPrioritised))
                .ForMember(x => x.DtSchld, options => options.MapFrom(input => input.FsiihDtSchld))
                .ForMember(x => x.DtSub, options => options.MapFrom(input => input.FsiihDtSub))
                .ForMember(x => x.DtVet, options => options.MapFrom(input => input.FsiihDtVet))
                .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FsiihModBy))
                .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FsiihModDt))
                .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.FsiihPkRefNo))
                .ForMember(x => x.QuaterId, options => options.MapFrom(input => input.FsiihQuaterId))
                .ForMember(x => x.RefId, options => options.MapFrom(input => input.FsiihRefId))
                .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FsiihRmu))
                .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FsiihSubmitSts))
                .ForMember(x => x.UseridAgrd, options => options.MapFrom(input => input.FsiihUseridAgrd))
                .ForMember(x => x.UseridPrioritised, options => options.MapFrom(input => input.FsiihUseridPrioritised))
                .ForMember(x => x.UseridSchld, options => options.MapFrom(input => input.FsiihUseridSchld))
                .ForMember(x => x.UseridSub, options => options.MapFrom(input => input.FsiihUseridSub))
                .ForMember(x => x.UseridVet, options => options.MapFrom(input => input.FsiihUseridVet))
                .ForMember(x => x.ActCode, options => options.MapFrom(input => input.FsiihActCode))
                .ForMember(x => x.ActName, options => options.MapFrom(input => input.FsiihActName))
                .ForMember(x => x.UserNamePrioritised, options => options.MapFrom(input => input.FsiihUserNamePrioritised))
                .ForMember(x => x.UserDesignationPrioritised, options => options.MapFrom(input => input.FsiihUserDesignationPrioritised))
                .ForMember(x => x.UserNameSchId, options => options.MapFrom(input => input.FsiihUserNameSchId))
                .ForMember(x => x.UserDesignationSchId, options => options.MapFrom(input => input.FsiihUserDesignationSchId))
                .ForMember(x => x.UserNameSub, options => options.MapFrom(input => input.FsiihUserNameSub))
                .ForMember(x => x.UserDesignationSub, options => options.MapFrom(input => input.FsiihUserDesignationSub))
                .ForMember(x => x.UserNameVet, options => options.MapFrom(input => input.FsiihUserNameVet))
                .ForMember(x => x.UserDesignationVet, options => options.MapFrom(input => input.FsiihUserDesignationVet))
                .ForMember(x => x.UserNameAgrd, options => options.MapFrom(input => input.FsiihUserNameAgrd))
                .ForMember(x => x.UserDesignationAgrd, options => options.MapFrom(input => input.FsiihUserDesignationAgrd))
                .ForMember(x => x.Year, options => options.MapFrom(input => input.FsiihYear))
                .ForMember(x => x.Status, options => options.MapFrom(input => input.FsiihStatus))
                .ForMember(x => x.AuditLog, options => options.MapFrom(input => input.FsiihAuditLog));

            CreateMap<RmFormS2Dtl, FormS2DetailRequestDto>()
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FsiidActiveYn))
                .ForMember(x => x.Adp, options => options.MapFrom(input => input.FsiidAdp))
                .ForMember(x => x.Cil, options => options.MapFrom(input => input.FsiidCil))
                .ForMember(x => x.CrBy, options => options.MapFrom(input => input.FsiidCrBy))
                .ForMember(x => x.CrDt, options => options.MapFrom(input => input.FsiidCrDt))
                .ForMember(x => x.CrwAllwcdQuar, options => options.MapFrom(input => input.FsiidCrwAllwcdQuar))
                .ForMember(x => x.CrwDaysReq, options => options.MapFrom(input => input.FsiidCrwDaysReq))
                .ForMember(x => x.HeaderPkRefNo, options => options.MapFrom(input => input.FsiidFsiihPkRefNo))
                .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FsiidModBy))
                .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FsiidModDt))
                .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.FsiidPkRefNo))
                .ForMember(x => x.PriorityI, options => options.MapFrom(input => input.FsiidPriorityI))
                .ForMember(x => x.PriorityIi, options => options.MapFrom(input => input.FsiidPriorityIi))
                .ForMember(x => x.RdLocSeq, options => options.MapFrom(input => input.FsiidRdLocSeq))
                .ForMember(x => x.RefId, options => options.MapFrom(input => input.FsiidRefId))
                .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FsiidRemarks))
                .ForMember(x => x.RoadId, options => options.MapFrom(input => input.FsiidRoadId))
                .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FsiidSubmitSts))
                .ForMember(x => x.Priority, options => options.MapFrom(input => input.FsiidPriority))
                .ForMember(x => x.TargetPercent, options => options.MapFrom(input => input.FsiidTargetPercent))
                .ForMember(x => x.RoadName, options => options.MapFrom(input => input.FsiidRoadName))
                .ForMember(x => x.Pavedlength, options => options.MapFrom(input => input.FsiidRoadPavedLength))
                .ForMember(x => x.UnPavedlength, options => options.MapFrom(input => input.FsiidRoadUnPavedLength))
                .ForMember(x => x.WorkQty, options => options.MapFrom(input => input.FsiidWorkQty));

            CreateMap<RmUsers, UserDTO>();

            CreateMap<RmUsers, UserResponseDTO>()
                              .ForMember(x => x.UserId, options => options.MapFrom(input => input.UsrPkId))
                              .ForMember(x => x.UserName, options => options.MapFrom(input => input.UsrUserName))
                              .ForMember(x => x.Position, options => options.MapFrom(input => input.UsrPosition))
                              .ForMember(x => x.SignIn, options => options.MapFrom(input => input.UsrSign))
                              .ForMember(x => x.ForceResetPwd, options => options.MapFrom(input => input.UsrForceRstPwd));

            CreateMap<RmWarImageDtl, WarImageDtlResponseDTO>()
                              .ForMember(x => x.NO, options => options.MapFrom(input => input.FwarPkRefNo))
                              .ForMember(x => x.HeaderId, options => options.MapFrom(input => input.FwarFddPkRefNo))
                              .ForMember(x => x.FxhPkRefNo, options => options.MapFrom(input => input.FwarFxhPkRefNo))
                              .ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.FwarImageTypeCode))
                              .ForMember(x => x.ImageSrno, options => options.MapFrom(input => input.FwarImageSrno))
                              .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.FwarImageFilenameSys))
                              .ForMember(x => x.ImageFilenameUpload, options => options.MapFrom(input => input.FwarImageFilenameUpload))
                              .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FwarModBy))
                              .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FwarModDt))
                              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FwarCrBy))
                              .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FwarCrDt))
                              .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FwarSubmitSts))
                              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FwarActiveYn))
                              .ForMember(x => x.ImageUserFilename, options => options.MapFrom(input => input.FwarImageUserFilename));


            CreateMap<RmFormhImageDtl, FormHImageRequestDTO>()
                              .ForMember(x => x.No, options => options.MapFrom(input => input.FhiPkRefNo))
                              .ForMember(x => x.HeaderNo, options => options.MapFrom(input => input.FhiFhhPkRefNo))
                              .ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.FhiImageTypeCode))
                              .ForMember(x => x.ImageSrno, options => options.MapFrom(input => input.FhiImageSrno))
                              .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.FhiImageFilenameSys))
                              .ForMember(x => x.ImageFilenameUpload, options => options.MapFrom(input => input.FhiImageFilenameUpload))
                              .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FhiModBy))
                              .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FhiModDt))
                              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FhiCrBy))
                              .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FhiCrDt))
                              .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FhiSubmitSts))
                              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FhiActiveYn))
                              .ForMember(x => x.ImageUserFilePath, options => options.MapFrom(input => input.FhiImageUserFilePath));


            CreateMap<RmFormhImageDtl, FormHImageResponseDTO>()
                              .ForMember(x => x.No, options => options.MapFrom(input => input.FhiPkRefNo))
                              .ForMember(x => x.HeaderNo, options => options.MapFrom(input => input.FhiFhhPkRefNo))
                              .ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.FhiImageTypeCode))
                              .ForMember(x => x.ImageSrno, options => options.MapFrom(input => input.FhiImageSrno))
                              .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.FhiImageFilenameSys))
                              .ForMember(x => x.ImageFilenameUpload, options => options.MapFrom(input => input.FhiImageFilenameUpload))
                              .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FhiModBy))
                              .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FhiModDt))
                              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FhiCrBy))
                              .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FhiCrDt))
                              .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FhiSubmitSts))
                              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FhiActiveYn))
                              .ForMember(x => x.ImageUserFilePath, options => options.MapFrom(input => input.FhiImageUserFilePath));



            CreateMap<RmWarImageDtl, WarImageDtlRequestDTO>()
                              .ForMember(x => x.NO, options => options.MapFrom(input => input.FwarPkRefNo))
                              .ForMember(x => x.HeaderId, options => options.MapFrom(input => input.FwarFddPkRefNo))
                              .ForMember(x => x.FxhPkRefNo, options => options.MapFrom(input => input.FwarFxhPkRefNo))
                              .ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.FwarImageTypeCode))
                              .ForMember(x => x.ImageSrno, options => options.MapFrom(input => input.FwarImageSrno))
                              .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.FwarImageFilenameSys))
                              .ForMember(x => x.ImageFilenameUpload, options => options.MapFrom(input => input.FwarImageFilenameUpload))
                              .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FwarModBy))
                              .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FwarModDt))
                              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FwarCrBy))
                              .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FwarCrDt))
                              .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FwarSubmitSts))
                              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FwarActiveYn))
                              .ForMember(x => x.ImageUserFilename, options => options.MapFrom(input => input.FwarImageUserFilename));


            CreateMap<RmFormHHdr, FormHRequestDTO>()
                              .ForMember(x => x.No, options => options.MapFrom(input => input.FhhPkRefNo))
                              .ForMember(x => x.DtVet, options => options.MapFrom(input => input.FhhDtVetAuth))
                              .ForMember(x => x.SentJKRSDate, options => options.MapFrom(input => input.FhhStsDtSubAuth))
                              .ForMember(x => x.RecievedFromJKRSDate, options => options.MapFrom(input => input.FhhStsDtRcvdAuth))
                              .ForMember(x => x.FormAId, options => options.MapFrom(input => input.FhhFadPkRefNo))
                              .ForMember(x => x.FormJId, options => options.MapFrom(input => input.FhhFjdPkRefNo))
                              .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FhhContNo))
                              .ForMember(x => x.InspDt, options => options.MapFrom(input => input.FhhInspDt))
                              .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FhhRoadCode))
                              .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FhhRmu))
                              .ForMember(x => x.Div, options => options.MapFrom(input => input.FhhDiv))
                              .ForMember(x => x.RdName, options => options.MapFrom(input => input.FhhRdName))
                              .ForMember(x => x.AssetId, options => options.MapFrom(input => input.FhhAssetId))
                              .ForMember(x => x.AssetGroupCode, options => options.MapFrom(input => input.FhhAssetGroupCode))
                              .ForMember(x => x.ChinageFrom, options => options.MapFrom(input => input.FhhFrmCh))
                              .ForMember(x => x.ChinageFromDeci, options => options.MapFrom(input => input.FhhFrmChDeci))
                              .ForMember(x => x.ChinageTo, options => options.MapFrom(input => input.FhhToCh))
                              .ForMember(x => x.ChinageToDeci, options => options.MapFrom(input => input.FhhToChDeci))
                              .ForMember(x => x.DamDtl, options => options.MapFrom(input => input.FhhDamDtl))
                              .ForMember(x => x.DamCausedby, options => options.MapFrom(input => input.FhhDamCausedby))
                              .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FhhRemarks))
                              .ForMember(x => x.CltRemarks, options => options.MapFrom(input => input.FhhCltRemarks))
                              .ForMember(x => x.SignPrp, options => options.MapFrom(input => input.FhhSignPrp))
                              .ForMember(x => x.UseridPrp, options => options.MapFrom(input => input.FhhUseridPrp))
                              .ForMember(x => x.UsernamePrp, options => options.MapFrom(input => input.FhhUsernamePrp))
                              .ForMember(x => x.DesignationPrp, options => options.MapFrom(input => input.FhhDesignationPrp))
                              .ForMember(x => x.DtPrp, options => options.MapFrom(input => input.FhhDtPrp))
                              .ForMember(x => x.SignVer, options => options.MapFrom(input => input.FhhSignVer))
                              .ForMember(x => x.UseridVer, options => options.MapFrom(input => input.FhhUseridVer))
                              .ForMember(x => x.UsernameVer, options => options.MapFrom(input => input.FhhUsernameVer))
                              .ForMember(x => x.DesignationVer, options => options.MapFrom(input => input.FhhDesignationVer))
                              .ForMember(x => x.DtVer, options => options.MapFrom(input => input.FhhDtVer))
                              .ForMember(x => x.SubAuthSts, options => options.MapFrom(input => input.FhhSubAuthSts))
                              .ForMember(x => x.RcvdAuthSts, options => options.MapFrom(input => input.FhhRcvdAuthSts))
                              .ForMember(x => x.DtRcvdAuth, options => options.MapFrom(input => input.FhhDtRcvdAuth))
                              .ForMember(x => x.AuthRemarks, options => options.MapFrom(input => input.FhhAuthRemarks))
                              .ForMember(x => x.AuthRepNo, options => options.MapFrom(input => input.FhhAuthRepNo))
                              .ForMember(x => x.AuthRecmd, options => options.MapFrom(input => input.FhhAuthRecmd))
                              .ForMember(x => x.SignRcvdAuth, options => options.MapFrom(input => input.FhhSignRcvdAuth))
                              .ForMember(x => x.UseridRcvdAuth, options => options.MapFrom(input => input.FhhUseridRcvdAuth))
                              .ForMember(x => x.UsernameRcvdAuth, options => options.MapFrom(input => input.FhhUsernameRcvdAuth))
                              .ForMember(x => x.DesignationRcvdAuth, options => options.MapFrom(input => input.FhhDesignationRcvdAuth))
                              .ForMember(x => x.SignVetAuth, options => options.MapFrom(input => input.FhhSignVetAuth))
                              .ForMember(x => x.UseridVetAuth, options => options.MapFrom(input => input.FhhUseridVetAuth))
                              .ForMember(x => x.UsernameVetAuth, options => options.MapFrom(input => input.FhhUsernameVetAuth))
                              .ForMember(x => x.DesignationVetAuth, options => options.MapFrom(input => input.FhhDesignationVetAuth))
                              .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FhhModBy))
                              .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FhhModDt))
                              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FhhCrBy))
                              .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FhhCrDt))
                              .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FhhSubmitSts))
                              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FhhActiveYn))
                              .ForMember(x => x.ReferenceNo, options => options.MapFrom(input => input.FhhRefId))
                              .ForMember(x => x.Section, options => options.MapFrom(input => input.FhhSection))
                              .ForMember(x => x.Status, options => options.MapFrom(input => input.FhhStatus))
                              .ForMember(x => x.AuditLog, options => options.MapFrom(input => input.FhhAuditLog));

            CreateMap<RmFormHHdr, FormHResponseDTO>()
                              .ForMember(x => x.No, options => options.MapFrom(input => input.FhhPkRefNo))
                              .ForMember(x => x.DtVet, options => options.MapFrom(input => input.FhhDtVetAuth))
                              .ForMember(x => x.FormAId, options => options.MapFrom(input => input.FhhFadPkRefNo))
                              .ForMember(x => x.FormJId, options => options.MapFrom(input => input.FhhFjdPkRefNo))
                              .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FhhContNo))
                              .ForMember(x => x.InspDt, options => options.MapFrom(input => input.FhhInspDt))
                              .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FhhRoadCode))
                              .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FhhRmu))
                              .ForMember(x => x.Div, options => options.MapFrom(input => input.FhhDiv))
                              .ForMember(x => x.RdName, options => options.MapFrom(input => input.FhhRdName))
                              .ForMember(x => x.AssetId, options => options.MapFrom(input => input.FhhAssetId))
                              .ForMember(x => x.AssetGroupCode, options => options.MapFrom(input => input.FhhAssetGroupCode))
                              .ForMember(x => x.ChinageFrom, options => options.MapFrom(input => input.FhhFrmCh))
                              .ForMember(x => x.ChinageFromDeci, options => options.MapFrom(input => input.FhhFrmChDeci))
                              .ForMember(x => x.ChinageTo, options => options.MapFrom(input => input.FhhToCh))
                              .ForMember(x => x.ChinageToDeci, options => options.MapFrom(input => input.FhhToChDeci))
                              .ForMember(x => x.DamDtl, options => options.MapFrom(input => input.FhhDamDtl))
                              .ForMember(x => x.DamCausedby, options => options.MapFrom(input => input.FhhDamCausedby))
                              .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FhhRemarks))
                              .ForMember(x => x.CltRemarks, options => options.MapFrom(input => input.FhhCltRemarks))
                              .ForMember(x => x.SignPrp, options => options.MapFrom(input => input.FhhSignPrp))
                              .ForMember(x => x.UseridPrp, options => options.MapFrom(input => input.FhhUseridPrp))
                              .ForMember(x => x.UsernamePrp, options => options.MapFrom(input => input.FhhUsernamePrp))
                              .ForMember(x => x.DesignationPrp, options => options.MapFrom(input => input.FhhDesignationPrp))
                              .ForMember(x => x.DtPrp, options => options.MapFrom(input => input.FhhDtPrp))
                              .ForMember(x => x.SignVer, options => options.MapFrom(input => input.FhhSignVer))
                              .ForMember(x => x.UseridVer, options => options.MapFrom(input => input.FhhUseridVer))
                              .ForMember(x => x.UsernameVer, options => options.MapFrom(input => input.FhhUsernameVer))
                              .ForMember(x => x.DesignationVer, options => options.MapFrom(input => input.FhhDesignationVer))
                              .ForMember(x => x.DtVer, options => options.MapFrom(input => input.FhhDtVer))
                              .ForMember(x => x.SubAuthSts, options => options.MapFrom(input => input.FhhSubAuthSts))
                              .ForMember(x => x.RcvdAuthSts, options => options.MapFrom(input => input.FhhRcvdAuthSts))
                              .ForMember(x => x.DtRcvdAuth, options => options.MapFrom(input => input.FhhDtRcvdAuth))
                              .ForMember(x => x.AuthRemarks, options => options.MapFrom(input => input.FhhAuthRemarks))
                              .ForMember(x => x.AuthRepNo, options => options.MapFrom(input => input.FhhAuthRepNo))
                              .ForMember(x => x.AuthRecmd, options => options.MapFrom(input => input.FhhAuthRecmd))
                              .ForMember(x => x.SignRcvdAuth, options => options.MapFrom(input => input.FhhSignRcvdAuth))
                              .ForMember(x => x.UseridRcvdAuth, options => options.MapFrom(input => input.FhhUseridRcvdAuth))
                              .ForMember(x => x.UsernameRcvdAuth, options => options.MapFrom(input => input.FhhUsernameRcvdAuth))
                              .ForMember(x => x.DesignationRcvdAuth, options => options.MapFrom(input => input.FhhDesignationRcvdAuth))
                              .ForMember(x => x.SignVetAuth, options => options.MapFrom(input => input.FhhSignVetAuth))
                              .ForMember(x => x.UseridVetAuth, options => options.MapFrom(input => input.FhhUseridVetAuth))
                              .ForMember(x => x.UsernameVetAuth, options => options.MapFrom(input => input.FhhUsernameVetAuth))
                              .ForMember(x => x.DesignationVetAuth, options => options.MapFrom(input => input.FhhDesignationVetAuth))
                              .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FhhModBy))
                              .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FhhModDt))
                              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FhhCrBy))
                              .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FhhCrDt))
                              .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FhhSubmitSts))
                              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FhhActiveYn))
                              .ForMember(x => x.ReferenceNo, options => options.MapFrom(input => input.FhhRefId))
                              .ForMember(x => x.Section, options => options.MapFrom(input => input.FhhSection))
                              .ForMember(x => x.Status, options => options.MapFrom(input => input.FhhStatus))
                              .ForMember(x => x.AuditLog, options => options.MapFrom(input => input.FhhAuditLog));




            CreateMap<RmAccUcuImageDtl, AccUccImageDtlRequestDTO>()
                              .ForMember(x => x.NO, options => options.MapFrom(input => input.FauPkRefNo))
                              .ForMember(x => x.HeaderId, options => options.MapFrom(input => input.FauFddPkRefNo))
                              .ForMember(x => x.FxhPkRefNo, options => options.MapFrom(input => input.FauFxhPkRefNo))
                              .ForMember(x => x.AccUcu, options => options.MapFrom(input => input.FauAccUcu))
                              .ForMember(x => x.ImageSrno, options => options.MapFrom(input => input.FauImageSrno))
                              .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.FauImageFilenameSys))
                              .ForMember(x => x.ImageFilenameUpload, options => options.MapFrom(input => input.FauImageFilenameUpload))
                              .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FauModBy))
                              .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FauModDt))
                              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FauCrBy))
                              .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FauCrDt))
                              .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FauSubmitSts))
                              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FauActiveYn))
                              .ForMember(x => x.ImageUserFilename, options => options.MapFrom(input => input.FauImageUserFilename));


            CreateMap<RmAccUcuImageDtl, AccUccImageDtlResponseDTO>()
                              .ForMember(x => x.NO, options => options.MapFrom(input => input.FauPkRefNo))
                              .ForMember(x => x.HeaderId, options => options.MapFrom(input => input.FauFddPkRefNo))
                              .ForMember(x => x.FxhPkRefNo, options => options.MapFrom(input => input.FauFxhPkRefNo))
                              .ForMember(x => x.AccUcu, options => options.MapFrom(input => input.FauAccUcu))
                              .ForMember(x => x.ImageSrno, options => options.MapFrom(input => input.FauImageSrno))
                              .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.FauImageFilenameSys))
                              .ForMember(x => x.ImageFilenameUpload, options => options.MapFrom(input => input.FauImageFilenameUpload))
                              .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FauModBy))
                              .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FauModDt))
                              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FauCrBy))
                              .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FauCrDt))
                              .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FauSubmitSts))
                              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FauActiveYn))
                              .ForMember(x => x.ImageUserFilename, options => options.MapFrom(input => input.FauImageUserFilename));




            CreateMap<RmFormAHdr, FormAHeaderResponseDTO>()
                              .ForMember(x => x.Id, options => options.MapFrom(input => input.FahRefId))
                              .ForMember(x => x.No, options => options.MapFrom(input => input.FahPkRefNo))
                              .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FahRoadCode))
                              .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FahRmu))
                              .ForMember(x => x.RoadName, options => options.MapFrom(input => input.FahRoadName))
                              .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FahContNo))
                              .ForMember(x => x.AssetGroupCode, options => options.MapFrom(input => input.FahAssetGroupCode))
                              .ForMember(x => x.Month, options => options.MapFrom(input => input.FahMonth))
                              .ForMember(x => x.Year, options => options.MapFrom(input => input.FahYear))
                              .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FahRemarks))
                              .ForMember(x => x.SignPrp, options => options.MapFrom(input => input.FahSignPrp))
                              .ForMember(x => x.UseridPrp, options => options.MapFrom(input => input.FahUseridPrp))
                              .ForMember(x => x.UsernamePrp, options => options.MapFrom(input => input.FahUsernamePrp))
                              .ForMember(x => x.DesignationPrp, options => options.MapFrom(input => input.FahDesignationPrp))
                              .ForMember(x => x.DtPrp, options => options.MapFrom(input => input.FahDtPrp))
                              .ForMember(x => x.SignVer, options => options.MapFrom(input => input.FahSignVer))
                              .ForMember(x => x.UseridVer, options => options.MapFrom(input => input.FahUseridVer))
                              .ForMember(x => x.UsernameVer, options => options.MapFrom(input => input.FahUsernameVer))
                              .ForMember(x => x.DesignationVer, options => options.MapFrom(input => input.FahDesignationVer))
                              .ForMember(x => x.VerifiedDt, options => options.MapFrom(input => input.FahDtVer))
                              .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FahModBy))
                              .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FahModDt))
                              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FahCrBy))
                              .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FahCrDt))
                              .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FahSubmitSts))
                              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FahActiveYn))
                              .ForMember(x => x.section, options => options.MapFrom(input => input.FahSection));


            CreateMap<RmFormADtl, FormADetailResponseDTO>()
                              .ForMember(x => x.HeaderNo, options => options.MapFrom(input => input.FadFahPkRefNo))
                              .ForMember(x => x.No, options => options.MapFrom(input => input.FadPkRefNo))
                              .ForMember(x => x.FadRefNO, options => options.MapFrom(input => input.FadRefId))
                              .ForMember(x => x.AssetId, options => options.MapFrom(input => input.FadAssetId))
                              .ForMember(x => x.Dt, options => options.MapFrom(input => input.FadDt))
                              .ForMember(x => x.Srno, options => options.MapFrom(input => input.FadSrno))
                              .ForMember(x => x.SiteRef, options => options.MapFrom(input => input.FadSiteRef))
                              .ForMember(x => x.FromCh, options => options.MapFrom(input => input.FadFrmCh))
                              .ForMember(x => x.FromChDeci, options => options.MapFrom(input => input.FadFrmChDeci))
                              .ForMember(x => x.ToCh, options => options.MapFrom(input => input.FadToCh))
                              .ForMember(x => x.ToChDeci, options => options.MapFrom(input => input.FadToChDeci))
                              .ForMember(x => x.DefCode, options => options.MapFrom(input => input.FadDefCode))
                              .ForMember(x => x.ActCode, options => options.MapFrom(input => input.FadActCode))
                              .ForMember(x => x.Unit, options => options.MapFrom(input => input.FadUnit))
                              .ForMember(x => x.Length, options => options.MapFrom(input => input.FadLength))
                              .ForMember(x => x.Width, options => options.MapFrom(input => input.FadWidth))
                              .ForMember(x => x.Height, options => options.MapFrom(input => input.FadHeight))
                              .ForMember(x => x.Adp, options => options.MapFrom(input => input.FadAdp))
                              .ForMember(x => x.Cdr, options => options.MapFrom(input => input.FadCdr))
                              .ForMember(x => x.Priority, options => options.MapFrom(input => input.FadPriority))
                              .ForMember(x => x.Wi, options => options.MapFrom(input => input.FadWi))
                              .ForMember(x => x.Ws, options => options.MapFrom(input => input.FadWs))
                              .ForMember(x => x.Wtc, options => options.MapFrom(input => input.FadWtc))
                              .ForMember(x => x.Wc, options => options.MapFrom(input => input.FadWc))
                              .ForMember(x => x.SftPs, options => options.MapFrom(input => input.FadSftPs))
                              .ForMember(x => x.SftWis, options => options.MapFrom(input => input.FadSftWis))
                              .ForMember(x => x.Rt, options => options.MapFrom(input => input.FadRt))
                              .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FadRemarks))
                              .ForMember(x => x.FormhApp, options => options.MapFrom(input => input.FadFormhApp))
                              .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FadModBy))
                              .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FadModDt))
                              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FadCrBy))
                              .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FadCrDt))
                              .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FadSubmitSts))
                              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FadActiveYn))
                              .ForMember(x => x.Desc, options => options.MapFrom(input => input.FadDesc));

            CreateMap<RmFormN1Hdr, FormN1HeaderRequestDTO>()
             .ForMember(x => x.No, options => options.MapFrom(input => input.FnihPkRefNo))
             .ForMember(x => x.SourceType, options => options.MapFrom(input => input.FnihSourceType))
             .ForMember(x => x.QA2RefNo, options => options.MapFrom(input => input.FnihFqaiidPkRefNo))
             .ForMember(x => x.S1RefNo, options => options.MapFrom(input => input.FnihFsidPkRefNo))
             .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FnihContNo))
             .ForMember(x => x.ReferenceID, options => options.MapFrom(input => input.FnihRefId))
             .ForMember(x => x.NCNo, options => options.MapFrom(input => input.FnihNcnNo))
             .ForMember(x => x.DivisonName, options => options.MapFrom(input => input.FnihDiv))
             .ForMember(x => x.RMU, options => options.MapFrom(input => input.FnihRmu))
             .ForMember(x => x.ServiceProvider, options => options.MapFrom(input => input.FnihSrProvider))
             .ForMember(x => x.AttentionToUserid, options => options.MapFrom(input => input.FnihUseridAttnTo))
             .ForMember(x => x.AttnToUsername, options => options.MapFrom(input => input.FnihUsernameAttnTo))
             .ForMember(x => x.CcUserid, options => options.MapFrom(input => input.FnihUseridCc))
             .ForMember(x => x.CcUsername, options => options.MapFrom(input => input.FnihUsernameCc))
             .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FnihRoadCode))
             .ForMember(x => x.RoadName, options => options.MapFrom(input => input.FnihRoadName))
             .ForMember(x => x.FromChainage, options => options.MapFrom(input => input.FnihFrmCh))
             .ForMember(x => x.FromChainageDeci, options => options.MapFrom(input => input.FnihFrmChDeci))
             .ForMember(x => x.ToChainage, options => options.MapFrom(input => input.FnihToCh))
             .ForMember(x => x.ToChainageDeci, options => options.MapFrom(input => input.FnihToChDeci))
             .ForMember(x => x.NcDescription, options => options.MapFrom(input => input.FnihNcDesc))
             .ForMember(x => x.CorrectActionTakenDate, options => options.MapFrom(input => input.FnihDtCorrectTkn))
             .ForMember(x => x.IssuedBySignature, options => options.MapFrom(input => input.FnihSignIssued))
             .ForMember(x => x.IssuedByUserId, options => options.MapFrom(input => input.FnihUseridIssued))
             .ForMember(x => x.IssuedByUsername, options => options.MapFrom(input => input.FnihUsernameIssued))
             .ForMember(x => x.IssuedByDesignation, options => options.MapFrom(input => input.FnihDesignationIssued))
             .ForMember(x => x.RecievedBySignature, options => options.MapFrom(input => input.FnihSignRcvd))
             .ForMember(x => x.RecievedByUserId, options => options.MapFrom(input => input.FnihUseridRcvd))
             .ForMember(x => x.RecievedByUsername, options => options.MapFrom(input => input.FnihUsernameRcvd))
             .ForMember(x => x.RecievedByDesignation, options => options.MapFrom(input => input.FnihDesignationRcvd))
             .ForMember(x => x.RecievedByDate, options => options.MapFrom(input => input.FnihDtRcvd))
             .ForMember(x => x.ProposedReworkSpecification, options => options.MapFrom(input => input.FnihProposedRewrkSpec))
             .ForMember(x => x.CorrectiveSignature, options => options.MapFrom(input => input.FnihSignCorrective))
             .ForMember(x => x.CorrectiveUserid, options => options.MapFrom(input => input.FnihUseridCorrective))
             .ForMember(x => x.CorrectiveUsername, options => options.MapFrom(input => input.FnihUsernameCorrective))
             .ForMember(x => x.CorrectiveDesignation, options => options.MapFrom(input => input.FnihDesignationCorrective))
             .ForMember(x => x.CorrectiveDate, options => options.MapFrom(input => input.FnihDtCorrective))
             .ForMember(x => x.AcceptedBySignature, options => options.MapFrom(input => input.FnihSignAccptd))
             .ForMember(x => x.AcceptedByUserId, options => options.MapFrom(input => input.FnihUseridAccptd))
             .ForMember(x => x.AcceptedByUsername, options => options.MapFrom(input => input.FnihUsernameAccptd))
             .ForMember(x => x.AcceptedByDesignation, options => options.MapFrom(input => input.FnihDesignationAccptd))
             .ForMember(x => x.AcceptedByDate, options => options.MapFrom(input => input.FnihDtAccptd))
             .ForMember(x => x.IsCorrectionTaken, options => options.MapFrom(input => input.FnihCorrectionTkn))
             .ForMember(x => x.ISNcrIssued, options => options.MapFrom(input => input.FnihNcrIssue))
             .ForMember(x => x.IssuedDate, options => options.MapFrom(input => input.FnihIssueDt))
             .ForMember(x => x.OtherFollowAction, options => options.MapFrom(input => input.FnihOthrFllwAct))
             .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FnihRemarks))
             .ForMember(x => x.VerifiedBySignature, options => options.MapFrom(input => input.FnihSignVer))
             .ForMember(x => x.VerifiedByUserId, options => options.MapFrom(input => input.FnihUseridVer))
             .ForMember(x => x.VerifiedByUsername, options => options.MapFrom(input => input.FnihUsernameVer))
             .ForMember(x => x.VerifiedByDesignation, options => options.MapFrom(input => input.FnihDesignationVer))
             .ForMember(x => x.VerifiedByDate, options => options.MapFrom(input => input.FnihDtVer))
             .ForMember(x => x.ModifiedBy, options => options.MapFrom(input => input.FnihModBy))
             .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FnihModDt))
             .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FnihCrBy))
             .ForMember(x => x.CeratedDate, options => options.MapFrom(input => input.FnihCrDt))
             .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FnihSubmitSts))
             .ForMember(x => x.isActive, options => options.MapFrom(input => input.FnihActiveYn))
             .ForMember(x => x.AttentionToDesignation, options => options.MapFrom(input => input.FnihDesignationAttnTo))
            .ForMember(x => x.CCDesignation, options => options.MapFrom(input => input.FnihDesignationCc))
            .ForMember(x => x.CorrectionTakenBefore, options => options.MapFrom(input => input.FnihCrctTknBef))
            .ForMember(x => x.IssueDateHdr, options => options.MapFrom(input => input.FnihDtIssue))
            .ForMember(x => x.Status, options => options.MapFrom(input => input.FnihStatus))
            .ForMember(x => x.AuditLog, options => options.MapFrom(input => input.FnihAuditLog));


            CreateMap<RmFormAHdr, FormAHeaderRequestDTO>()
                   .ForMember(x => x.Id, options => options.MapFrom(input => input.FahRefId))
                   .ForMember(x => x.No, options => options.MapFrom(input => input.FahPkRefNo))
                   .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FahRoadCode))
                   .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FahRmu))
                   .ForMember(x => x.RoadName, options => options.MapFrom(input => input.FahRoadName))
                   .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FahContNo))
                   .ForMember(x => x.AssetGroupCode, options => options.MapFrom(input => input.FahAssetGroupCode))
                   .ForMember(x => x.Month, options => options.MapFrom(input => input.FahMonth))
                   .ForMember(x => x.Year, options => options.MapFrom(input => input.FahYear))
                   .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FahRemarks))
                   .ForMember(x => x.SignPrp, options => options.MapFrom(input => input.FahSignPrp))
                   .ForMember(x => x.UseridPrp, options => options.MapFrom(input => input.FahUseridPrp))
                   .ForMember(x => x.UsernamePrp, options => options.MapFrom(input => input.FahUsernamePrp))
                   .ForMember(x => x.DesignationPrp, options => options.MapFrom(input => input.FahDesignationPrp))
                   .ForMember(x => x.DtPrp, options => options.MapFrom(input => input.FahDtPrp))
                   .ForMember(x => x.SignVer, options => options.MapFrom(input => input.FahSignVer))
                   .ForMember(x => x.UseridVer, options => options.MapFrom(input => input.FahUseridVer))
                   .ForMember(x => x.UsernameVer, options => options.MapFrom(input => input.FahUsernameVer))
                   .ForMember(x => x.DesignationVer, options => options.MapFrom(input => input.FahDesignationVer))
                   .ForMember(x => x.VerifiedDt, options => options.MapFrom(input => input.FahDtVer))
                   .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FahModBy))
                   .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FahModDt))
                   .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FahCrBy))
                   .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FahCrDt))
                   .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FahSubmitSts))
                   .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FahActiveYn))
                   .ForMember(x => x.section, options => options.MapFrom(input => input.FahSection))
                   .ForMember(x => x.Status, options => options.MapFrom(input => input.FahStatus))
                   .ForMember(x => x.AuditLog, options => options.MapFrom(input => input.FahAuditLog));

            CreateMap<RmFormJHdr, FormJHeaderRequestDTO>()
                   .ForMember(x => x.Id, options => options.MapFrom(input => input.FjhRefId))
                   .ForMember(x => x.No, options => options.MapFrom(input => input.FjhPkRefNo))
                   .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FjhRoadCode))
                   .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FjhRmu))
                   .ForMember(x => x.RoadName, options => options.MapFrom(input => input.FjhRoadName))
                   .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FjhContNo))
                   .ForMember(x => x.AssetGroupCode, options => options.MapFrom(input => input.FjhAssetGroupCode))
                   .ForMember(x => x.Month, options => options.MapFrom(input => input.FjhMonth))
                   .ForMember(x => x.Year, options => options.MapFrom(input => input.FjhYear))
                   .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FjhRemarks))
                   .ForMember(x => x.SignPrp, options => options.MapFrom(input => input.FjhSignPrp))
                   .ForMember(x => x.UseridPrp, options => options.MapFrom(input => input.FjhUseridPrp))
                   .ForMember(x => x.UsernamePrp, options => options.MapFrom(input => input.FjhUsernamePrp))
                   .ForMember(x => x.DesignationPrp, options => options.MapFrom(input => input.FjhDesignationPrp))
                   .ForMember(x => x.DtPrp, options => options.MapFrom(input => input.FjhDtPrp))
                   .ForMember(x => x.SignVer, options => options.MapFrom(input => input.FjhSignVer))
                   .ForMember(x => x.UseridVer, options => options.MapFrom(input => input.FjhUseridVer))
                   .ForMember(x => x.UsernameVer, options => options.MapFrom(input => input.FjhUsernameVer))
                   .ForMember(x => x.DesignationVer, options => options.MapFrom(input => input.FjhDesignationVer))
                   .ForMember(x => x.UseridVet, options => options.MapFrom(input => input.FjhUseridVet))
                   .ForMember(x => x.UsernameVet, options => options.MapFrom(input => input.FjhUsernameVet))
                   .ForMember(x => x.DesignationVet, options => options.MapFrom(input => input.FjhDesignationVet))
                   .ForMember(x => x.AuditedDt, options => options.MapFrom(input => input.FjhDtVet))
                   .ForMember(x => x.VerifiedDt, options => options.MapFrom(input => input.FjhDtVer))
                   .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FjhModBy))
                   .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FjhModDt))
                   .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FjhCrBy))
                   .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FjhCrDt))
                   .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FjhSubmitSts))
                   .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FjhActiveYn))
                   .ForMember(x => x.section, options => options.MapFrom(input => input.FjhSection))
                   .ForMember(x => x.Status, options => options.MapFrom(input => input.FjhStatus))
                   .ForMember(x => x.AuditLog, options => options.MapFrom(input => input.FjhAuditLog));

            CreateMap<RmFormADtl, FormADetailsRequestDTO>()
                             .ForMember(x => x.HeaderNo, options => options.MapFrom(input => input.FadFahPkRefNo))
                             .ForMember(x => x.No, options => options.MapFrom(input => input.FadPkRefNo))
                             .ForMember(x => x.FadRefNO, options => options.MapFrom(input => input.FadRefId))
                             .ForMember(x => x.AssetId, options => options.MapFrom(input => input.FadAssetId))
                             .ForMember(x => x.Dt, options => options.MapFrom(input => input.FadDt))
                             .ForMember(x => x.Srno, options => options.MapFrom(input => input.FadSrno))
                             .ForMember(x => x.SiteRef, options => options.MapFrom(input => input.FadSiteRef))
                             .ForMember(x => x.FromCh, options => options.MapFrom(input => input.FadFrmCh))
                             .ForMember(x => x.FromChDeci, options => options.MapFrom(input => input.FadFrmChDeci))
                             .ForMember(x => x.ToCh, options => options.MapFrom(input => input.FadToCh))
                             .ForMember(x => x.ToChDeci, options => options.MapFrom(input => input.FadToChDeci))
                             .ForMember(x => x.DefCode, options => options.MapFrom(input => input.FadDefCode))
                             .ForMember(x => x.ActCode, options => options.MapFrom(input => input.FadActCode))
                             .ForMember(x => x.Unit, options => options.MapFrom(input => input.FadUnit))
                             .ForMember(x => x.Length, options => options.MapFrom(input => input.FadLength))
                             .ForMember(x => x.Width, options => options.MapFrom(input => input.FadWidth))
                             .ForMember(x => x.Height, options => options.MapFrom(input => input.FadHeight))
                             .ForMember(x => x.Adp, options => options.MapFrom(input => input.FadAdp))
                             .ForMember(x => x.Cdr, options => options.MapFrom(input => input.FadCdr))
                             .ForMember(x => x.Priority, options => options.MapFrom(input => input.FadPriority))
                             .ForMember(x => x.Wi, options => options.MapFrom(input => input.FadWi))
                             .ForMember(x => x.Ws, options => options.MapFrom(input => input.FadWs))
                             .ForMember(x => x.Wtc, options => options.MapFrom(input => input.FadWtc))
                             .ForMember(x => x.Wc, options => options.MapFrom(input => input.FadWc))
                             .ForMember(x => x.SftPs, options => options.MapFrom(input => input.FadSftPs))
                             .ForMember(x => x.SftWis, options => options.MapFrom(input => input.FadSftWis))
                             .ForMember(x => x.Rt, options => options.MapFrom(input => input.FadRt))
                             .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FadRemarks))
                             .ForMember(x => x.FormhApp, options => options.MapFrom(input => input.FadFormhApp))
                             .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FadModBy))
                             .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FadModDt))
                             .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FadCrBy))
                             .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FadCrDt))
                             .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FadSubmitSts))
                             .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FadActiveYn))
                             .ForMember(x => x.Desc, options => options.MapFrom(input => input.FadDesc));

            CreateMap<RmDdLookup, DDLookUpDTO>()
                .ForMember(x => x.No, options => options.MapFrom(input => input.DdlPkRefNo))
                .ForMember(x => x.Type, options => options.MapFrom(input => input.DdlType))
                .ForMember(x => x.TypeCode, options => options.MapFrom(input => input.DdlTypeCode))
                .ForMember(x => x.TypeDesc, options => options.MapFrom(input => input.DdlTypeDesc))
                .ForMember(x => x.TypeValue, options => options.MapFrom(input => input.DdlTypeValue))
                .ForMember(x => x.TypeRemarks, options => options.MapFrom(input => input.DdlTypeRemarks))
                .ForMember(x => x.ModifiedBy, options => options.MapFrom(input => input.DdlModBy))
                .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.DdlModDt))
                .ForMember(x => x.CreateDate, options => options.MapFrom(input => input.DdlCrDt))
                .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.DdlCrBy));


            CreateMap<RmAllassetInventory, AssetListRequestDTO>()
                .ForMember(x => x.No, options => options.MapFrom(input => input.AiPkRefNo))
                .ForMember(x => x.AssetId, options => options.MapFrom(input => input.AiAssetId))
                .ForMember(x => x.DivisionCode, options => options.MapFrom(input => input.AiDivCode))
                .ForMember(x => x.District, options => options.MapFrom(input => input.AiDist))
                .ForMember(x => x.RMUCode, options => options.MapFrom(input => input.AiRmuCode))
                // .ForMember(x => x.RMUAbbrev, options => options.MapFrom(input => input.AiRmuAbb))
                .ForMember(x => x.SectionCode, options => options.MapFrom(input => input.AiSecCode))
                .ForMember(x => x.SectionName, options => options.MapFrom(input => input.AiSecName))
                .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.AiRdCode))
                .ForMember(x => x.RoadName, options => options.MapFrom(input => input.AiRdName))
                .ForMember(x => x.GroupCode, options => options.MapFrom(input => input.AiAssetGrpCode))
                .ForMember(x => x.GroupType, options => options.MapFrom(input => input.AiGrpType))
                .ForMember(x => x.LocationChKm, options => options.MapFrom(input => input.AiLocChKm))
                .ForMember(x => x.LocationChM, options => options.MapFrom(input => input.AiLocChM))
                .ForMember(x => x.Bound, options => options.MapFrom(input => input.AiBound))
                .ForMember(x => x.WidthLane, options => options.MapFrom(input => input.AiWidthLane))
                .ForMember(x => x.StructureCode, options => options.MapFrom(input => input.AiStrucCode))
                .ForMember(x => x.ReferenceNo, options => options.MapFrom(input => input.AiRefNo))
                .ForMember(x => x.FeatureId, options => options.MapFrom(input => input.AiFeatureId))
                .ForMember(x => x.Diameter, options => options.MapFrom(input => input.AiDiameter))
                .ForMember(x => x.Width, options => options.MapFrom(input => input.AiWidth))
                .ForMember(x => x.Height, options => options.MapFrom(input => input.AiHeight))
                .ForMember(x => x.Material, options => options.MapFrom(input => input.AiMaterial))
                .ForMember(x => x.FindRoadLevel, options => options.MapFrom(input => input.AiFinRdLevel))
                .ForMember(x => x.CatchArea, options => options.MapFrom(input => input.AiCatchArea))
                .ForMember(x => x.Skew, options => options.MapFrom(input => input.AiSkew))
                .ForMember(x => x.DesignFlow, options => options.MapFrom(input => input.AiDesignFlow))
                .ForMember(x => x.Length, options => options.MapFrom(input => input.AiLength))
                .ForMember(x => x.PrecastSitu, options => options.MapFrom(input => input.AiPrecastSitu))
                .ForMember(x => x.BarrelNo, options => options.MapFrom(input => input.AiBarrelNo))
                .ForMember(x => x.IntelLevel, options => options.MapFrom(input => input.AiIntelLevel))
                .ForMember(x => x.InletStruc, options => options.MapFrom(input => input.AiIntelStruc))
                .ForMember(x => x.OutletLevel, options => options.MapFrom(input => input.AiOutletLevel))
                .ForMember(x => x.OutletStruc, options => options.MapFrom(input => input.AiOutletStruc))
                .ForMember(x => x.Owner, options => options.MapFrom(input => input.AiOwner))
                .ForMember(x => x.MaintainedBy, options => options.MapFrom(input => input.AiMaintainedBy))
                .ForMember(x => x.GpsEasting, options => options.MapFrom(input => input.AiGpsEasting))
                .ForMember(x => x.GpsNorthing, options => options.MapFrom(input => input.AiGpsNorthing))
                .ForMember(x => x.RiverName, options => options.MapFrom(input => input.AiRiverName))
                .ForMember(x => x.LengthSpan, options => options.MapFrom(input => input.AiLengthSpan))
                .ForMember(x => x.BridgeName, options => options.MapFrom(input => input.AiBridgeName))
                .ForMember(x => x.LaneCount, options => options.MapFrom(input => input.AiLaneCnt))
                .ForMember(x => x.SpanCount, options => options.MapFrom(input => input.AiSpanCnt))
                .ForMember(x => x.Median, options => options.MapFrom(input => input.AiMedian))
                .ForMember(x => x.Walkway, options => options.MapFrom(input => input.AiWalkway))
                .ForMember(x => x.StrucSuper, options => options.MapFrom(input => input.AiStrucSuper))
                .ForMember(x => x.ParapetType, options => options.MapFrom(input => input.AiParapetType))
                .ForMember(x => x.BearingType, options => options.MapFrom(input => input.AiBearingType))
                .ForMember(x => x.ExpanType, options => options.MapFrom(input => input.AiExpanType))
                .ForMember(x => x.DeckType, options => options.MapFrom(input => input.AiDeckType))
                .ForMember(x => x.AbutType, options => options.MapFrom(input => input.AiAbutType))
                .ForMember(x => x.PierType, options => options.MapFrom(input => input.AiPierType))
                .ForMember(x => x.ExpanJointCount, options => options.MapFrom(input => input.AiExpanJointCount))
                .ForMember(x => x.ExpanJointSpace, options => options.MapFrom(input => input.AiExpanJointSpace))
                .ForMember(x => x.AbutFound, options => options.MapFrom(input => input.AiAbutFound))
                .ForMember(x => x.PiersPrimComp, options => options.MapFrom(input => input.AiPiersPrimComp))
                .ForMember(x => x.BearingSeatDiaphg, options => options.MapFrom(input => input.AiBearingSeatDiaphg))
                .ForMember(x => x.BeamsGridTrusArch, options => options.MapFrom(input => input.AiBeamsGridTrusArch))
                .ForMember(x => x.DeckPavement, options => options.MapFrom(input => input.AiDeckPavement))
                .ForMember(x => x.Utilities, options => options.MapFrom(input => input.AiUtilities))
                .ForMember(x => x.Waterway, options => options.MapFrom(input => input.AiWaterway))
                .ForMember(x => x.WaterDownpipe, options => options.MapFrom(input => input.AiWaterDownpipe))
                .ForMember(x => x.ParapetRailing, options => options.MapFrom(input => input.AiParapetRailing))
                .ForMember(x => x.SidewalksAppSlab, options => options.MapFrom(input => input.AiSidewalksAppSlab))
                .ForMember(x => x.ExpanJoint, options => options.MapFrom(input => input.AiExpanJoint))
                .ForMember(x => x.SlopeRetainWall, options => options.MapFrom(input => input.AiSlopeRetainWall))
                .ForMember(x => x.BuiltYear, options => options.MapFrom(input => input.AiBuiltYear))
                .ForMember(x => x.FromCh, options => options.MapFrom(input => input.AiFrmCh))
                .ForMember(x => x.FromChDesi, options => options.MapFrom(input => input.AiFrmChDeci))
                .ForMember(x => x.ToCh, options => options.MapFrom(input => input.AiToCh))
                .ForMember(x => x.ToChDeci, options => options.MapFrom(input => input.AiToChDeci))
                .ForMember(x => x.LaneNo, options => options.MapFrom(input => input.AiLaneNo))
                .ForMember(x => x.PostSpacing, options => options.MapFrom(input => input.AiPostSpacing))
                .ForMember(x => x.Tier, options => options.MapFrom(input => input.AiTier))
                .ForMember(x => x.BotWidth, options => options.MapFrom(input => input.AiBotWidth))
                .ForMember(x => x.ModifiedBy, options => options.MapFrom(input => input.AiModBy))
                .ForMember(x => x.ModifiedDt, options => options.MapFrom(input => input.AiModDt))
                .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.AiCrBy))
                .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.AiCrDt))
                .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.AiSubmitSts))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.AiActiveYn))
                .ForMember(x => x.RmuName, options => options.MapFrom(input => input.AiRmuName))
                .ForMember(x => x.AssetNumber, options => options.MapFrom(input => input.AiAssetNumber))
                .ForMember(x => x.CulvertType, options => options.MapFrom(input => input.AiCulvertType));


            CreateMap<RmAllassetInventory, AssetsListResponseDTO>()
              .ForMember(x => x.No, options => options.MapFrom(input => input.AiPkRefNo))
              .ForMember(x => x.AssetId, options => options.MapFrom(input => input.AiAssetId))
              .ForMember(x => x.DivCode, options => options.MapFrom(input => input.AiDivCode))
              .ForMember(x => x.Dist, options => options.MapFrom(input => input.AiDist))
              .ForMember(x => x.RMUCode, options => options.MapFrom(input => input.AiRmuCode))
              // .ForMember(x => x.RMUAbbrev, options => options.MapFrom(input => input.AiRmuAbb))
              .ForMember(x => x.SecCode, options => options.MapFrom(input => input.AiSecCode))
               .ForMember(x => x.SecName, options => options.MapFrom(input => input.AiSecName))
              .ForMember(x => x.RdCode, options => options.MapFrom(input => input.AiRdCode))
              .ForMember(x => x.RdName, options => options.MapFrom(input => input.AiRdName))
              .ForMember(x => x.AssetGrpCode, options => options.MapFrom(input => input.AiAssetGrpCode))
              .ForMember(x => x.GrpType, options => options.MapFrom(input => input.AiGrpType))
              .ForMember(x => x.LocChKm, options => options.MapFrom(input => input.AiLocChKm))
              .ForMember(x => x.LocChM, options => options.MapFrom(input => input.AiLocChM))
              .ForMember(x => x.Bound, options => options.MapFrom(input => input.AiBound))
              .ForMember(x => x.StrucCode, options => options.MapFrom(input => input.AiStrucCode))
              .ForMember(x => x.RefNo, options => options.MapFrom(input => input.AiRefNo))
              .ForMember(x => x.FeatureId, options => options.MapFrom(input => input.AiFeatureId))
              .ForMember(x => x.Diameter, options => options.MapFrom(input => input.AiDiameter))
              .ForMember(x => x.Width, options => options.MapFrom(input => input.AiWidth))
              .ForMember(x => x.Height, options => options.MapFrom(input => input.AiHeight))
              .ForMember(x => x.Material, options => options.MapFrom(input => input.AiMaterial))
              .ForMember(x => x.WidthLane, options => options.MapFrom(input => input.AiWidthLane))
              .ForMember(x => x.FinRdLevel, options => options.MapFrom(input => input.AiFinRdLevel))
              .ForMember(x => x.CatchArea, options => options.MapFrom(input => input.AiCatchArea))
              .ForMember(x => x.Skew, options => options.MapFrom(input => input.AiSkew))
              .ForMember(x => x.DesignFlow, options => options.MapFrom(input => input.AiDesignFlow))
              .ForMember(x => x.Length, options => options.MapFrom(input => input.AiLength))
              .ForMember(x => x.PrecastSitu, options => options.MapFrom(input => input.AiPrecastSitu))
              .ForMember(x => x.BarrelNo, options => options.MapFrom(input => input.AiBarrelNo))
              .ForMember(x => x.IntelLevel, options => options.MapFrom(input => input.AiIntelLevel))
              .ForMember(x => x.IntelStruc, options => options.MapFrom(input => input.AiIntelStruc))
              .ForMember(x => x.OutletLevel, options => options.MapFrom(input => input.AiOutletLevel))
              .ForMember(x => x.OutletStruc, options => options.MapFrom(input => input.AiOutletStruc))
              .ForMember(x => x.Owner, options => options.MapFrom(input => input.AiOwner))
              .ForMember(x => x.MaintainedBy, options => options.MapFrom(input => input.AiMaintainedBy))
              .ForMember(x => x.GpsEasting, options => options.MapFrom(input => input.AiGpsEasting))
              .ForMember(x => x.GpsNorthing, options => options.MapFrom(input => input.AiGpsNorthing))
              .ForMember(x => x.RiverName, options => options.MapFrom(input => input.AiRiverName))
              .ForMember(x => x.LengthSpan, options => options.MapFrom(input => input.AiLengthSpan))
              .ForMember(x => x.BridgeName, options => options.MapFrom(input => input.AiBridgeName))
              .ForMember(x => x.LaneCnt, options => options.MapFrom(input => input.AiLaneCnt))
              .ForMember(x => x.SpanCnt, options => options.MapFrom(input => input.AiSpanCnt))
              .ForMember(x => x.Median, options => options.MapFrom(input => input.AiMedian))
              .ForMember(x => x.Walkway, options => options.MapFrom(input => input.AiWalkway))
              .ForMember(x => x.StrucSuper, options => options.MapFrom(input => input.AiStrucSuper))
              .ForMember(x => x.ParapetType, options => options.MapFrom(input => input.AiParapetType))
              .ForMember(x => x.BearingType, options => options.MapFrom(input => input.AiBearingType))
              .ForMember(x => x.ExpanType, options => options.MapFrom(input => input.AiExpanType))
              .ForMember(x => x.DeckType, options => options.MapFrom(input => input.AiDeckType))
              .ForMember(x => x.AbutType, options => options.MapFrom(input => input.AiAbutType))
              .ForMember(x => x.PierType, options => options.MapFrom(input => input.AiPierType))
              .ForMember(x => x.ExpanJointCount, options => options.MapFrom(input => input.AiExpanJointCount))
              .ForMember(x => x.ExpanJointSpace, options => options.MapFrom(input => input.AiExpanJointSpace))
              .ForMember(x => x.AbutFound, options => options.MapFrom(input => input.AiAbutFound))
              .ForMember(x => x.PiersPrimComp, options => options.MapFrom(input => input.AiPiersPrimComp))
              .ForMember(x => x.BearingSeatDiaphg, options => options.MapFrom(input => input.AiBearingSeatDiaphg))
              .ForMember(x => x.BeamsGridTrusArch, options => options.MapFrom(input => input.AiBeamsGridTrusArch))
              .ForMember(x => x.DeckPavement, options => options.MapFrom(input => input.AiDeckPavement))
              .ForMember(x => x.Utilities, options => options.MapFrom(input => input.AiUtilities))
              .ForMember(x => x.Waterway, options => options.MapFrom(input => input.AiWaterway))
              .ForMember(x => x.WaterDownpipe, options => options.MapFrom(input => input.AiWaterDownpipe))
              .ForMember(x => x.ParapetRailing, options => options.MapFrom(input => input.AiParapetRailing))
              .ForMember(x => x.SidewalksAppSlab, options => options.MapFrom(input => input.AiSidewalksAppSlab))
              .ForMember(x => x.ExpanJoint, options => options.MapFrom(input => input.AiExpanJoint))
              .ForMember(x => x.SlopeRetainWall, options => options.MapFrom(input => input.AiSlopeRetainWall))
              .ForMember(x => x.BuiltYear, options => options.MapFrom(input => input.AiBuiltYear))
              .ForMember(x => x.FromCh, options => options.MapFrom(input => input.AiFrmCh))
              .ForMember(x => x.FromChDeci, options => options.MapFrom(input => input.AiFrmChDeci))
              .ForMember(x => x.ToCh, options => options.MapFrom(input => input.AiToCh))
              .ForMember(x => x.ToChDeci, options => options.MapFrom(input => input.AiToChDeci))
              .ForMember(x => x.LaneNo, options => options.MapFrom(input => input.AiLaneNo))
              .ForMember(x => x.PostSpacing, options => options.MapFrom(input => input.AiPostSpacing))
              .ForMember(x => x.Tier, options => options.MapFrom(input => input.AiTier))
              .ForMember(x => x.BotWidth, options => options.MapFrom(input => input.AiBotWidth))
              .ForMember(x => x.ModifiedBy, options => options.MapFrom(input => input.AiModBy))
              .ForMember(x => x.ModifiedDt, options => options.MapFrom(input => input.AiModDt))
              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.AiCrBy))
              .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.AiCrDt))
              .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.AiSubmitSts))
              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.AiActiveYn))
              .ForMember(x => x.RmuName, options => options.MapFrom(input => input.AiRmuName))
              .ForMember(x => x.FrmCh, options => options.MapFrom(input => input.AiFrmCh))
              .ForMember(x => x.FrmChDeci, options => options.MapFrom(input => input.AiFrmChDeci))
              .ForMember(x => x.AssetNumber, options => options.MapFrom(input => input.AiAssetNumber))
              .ForMember(x => x.CulvertType, options => options.MapFrom(input => input.AiCulvertType));


            CreateMap<RmRoadMaster, RoadMasterResponseDTO>()
                .ForMember(x => x.No, options => options.MapFrom(input => input.RdmPkRefNo))
                .ForMember(x => x.FeatureId, options => options.MapFrom(input => input.RdmFeatureId))
                .ForMember(x => x.DivisionCode, options => options.MapFrom(input => input.RdmDivCode))
                .ForMember(x => x.RmuCode, options => options.MapFrom(input => input.RdmRmuCode))
                .ForMember(x => x.SecName, options => options.MapFrom(input => input.RdmSecName))
                .ForMember(x => x.CategoryName, options => options.MapFrom(input => input.RdmRdCatgName))
                .ForMember(x => x.CategoryCode, options => options.MapFrom(input => input.RdmRdCatgCode))
                .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.RdmRdCode))
                .ForMember(x => x.RoadName, options => options.MapFrom(input => input.RdmRdName))
                .ForMember(x => x.FrmLoc, options => options.MapFrom(input => input.RdmFrmLoc))
                .ForMember(x => x.ToLoc, options => options.MapFrom(input => input.RdmToLoc))
                .ForMember(x => x.FrmCh, options => options.MapFrom(input => input.RdmFrmCh))
                .ForMember(x => x.FrmChDeci, options => options.MapFrom(input => input.RdmFrmChDeci))
                .ForMember(x => x.ToCh, options => options.MapFrom(input => input.RdmToCh))
                .ForMember(x => x.ToChDeci, options => options.MapFrom(input => input.RdmToChDeci))
                .ForMember(x => x.LengthPaved, options => options.MapFrom(input => input.RdmLengthPaved))
                .ForMember(x => x.LengthUnpaved, options => options.MapFrom(input => input.RdmLengthUnpaved))
                .ForMember(x => x.Owner, options => options.MapFrom(input => input.RdmOwner))
                .ForMember(x => x.ModBy, options => options.MapFrom(input => input.RdmModBy))
                .ForMember(x => x.ModDt, options => options.MapFrom(input => input.RdmModDt))
                .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.RdmCrBy))
                .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.RdmCrDt))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.RdmActiveYn))
                .ForMember(x => x.SecCode, options => options.MapFrom(input => input.RdmSecCode))
                .ForMember(x => x.RmuName, options => options.MapFrom(input => input.RdmRmuName));

            CreateMap<AssetFieldDtl, AssetFieldDtlResDTO>()
                .ForMember(x => x.AssetType, options => options.MapFrom(input => input.AssetType))
                .ForMember(x => x.Code, options => options.MapFrom(input => input.Code))
                .ForMember(x => x.FieldName, options => options.MapFrom(input => input.FieldName))
                .ForMember(x => x.DisplayName, options => options.MapFrom(input => input.HdrDisplayName));

            CreateMap<RmAssetImageDtl, AssetImageDtlDTO>()
               .ForMember(x => x.RefNo, options => options.MapFrom(input => input.AidPkRefNo))
               .ForMember(x => x.No, options => options.MapFrom(input => input.AidAiPkRefNo))
               .ForMember(x => x.ImageSrno, options => options.MapFrom(input => input.AidImageSrno))
               .ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.AidImageTypeCode));

            CreateMap<RmAssetImageDtl, ImageListResponseDTO>()
                .ForMember(x => x.RefNo, options => options.MapFrom(input => input.AidPkRefNo))
                .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.AidAiPkRefNo))
                .ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.AidImageTypeCode))
                .ForMember(x => x.SNO, options => options.MapFrom(input => input.AidImageSrno))
                .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.AidImageFilenameSys))
                .ForMember(x => x.ImageFilename, options => options.MapFrom(input => input.AidImageFilenameUpload))
                .ForMember(x => x.FileName, options => options.MapFrom(input => input.AidImageUserFilePath))
                .ForMember(x => x.ModifyBy, options => options.MapFrom(input => input.AidModBy))
                .ForMember(x => x.ModifyDate, options => options.MapFrom(input => input.AidModDt))
                .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.AidCrBy))
                .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.AidCrDt))
                .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.AidSubmitSts))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.AidActiveYn));

            CreateMap<RmAssetImageDtl, ImageListRequestDTO>()
           .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.AidActiveYn))
           .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.AidSubmitSts))
           .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.AidCrDt))
           .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.AidCrBy))
           .ForMember(x => x.ModifyDate, options => options.MapFrom(input => input.AidModDt))
           .ForMember(x => x.ModifyBy, options => options.MapFrom(input => input.AidModBy))
           .ForMember(x => x.ImageFilename, options => options.MapFrom(input => input.AidImageFilenameUpload))
           .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.AidImageFilenameSys))
           .ForMember(x => x.FileName, options => options.MapFrom(input => input.AidImageUserFilePath))
           .ForMember(x => x.SNO, options => options.MapFrom(input => input.AidImageSrno))
           .ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.AidImageTypeCode))
           .ForMember(x => x.ImageId, options => options.MapFrom(input => input.AidPkRefNo))
           .ForMember(x => x.AssetId, options => options.MapFrom(input => input.AidAiPkRefNo));

            CreateMap<RmFormaImageDtl, FormAImageListRequestDTO>()
           .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FaiActiveYn))
           .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FaiSubmitSts))
           .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FaiCrDt))
           .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FaiCrBy))
           .ForMember(x => x.ModifyDate, options => options.MapFrom(input => input.FaiModDt))
           .ForMember(x => x.ModifyBy, options => options.MapFrom(input => input.FaiModBy))
           .ForMember(x => x.ImageFilename, options => options.MapFrom(input => input.FaiImageFilenameUpload))
           .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.FaiImageFilenameSys))
           .ForMember(x => x.SNO, options => options.MapFrom(input => input.FaiImageSrno))
           .ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.FaiImageTypeCode))
           .ForMember(x => x.ImageId, options => options.MapFrom(input => input.FaiPkRefNo))
           .ForMember(x => x.AssetId, options => options.MapFrom(input => input.FaiFadPkRefNo));

            CreateMap<RmFormjImageDtl, FormJImageListRequestDTO>()
           .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FjiActiveYn))
           .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FjiSubmitSts))
           .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FjiCrDt))
           .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FjiCrBy))
           .ForMember(x => x.ModifyDate, options => options.MapFrom(input => input.FjiModDt))
           .ForMember(x => x.ModifyBy, options => options.MapFrom(input => input.FjiModBy))
           .ForMember(x => x.ImageFilename, options => options.MapFrom(input => input.FjiImageFilenameUpload))
           .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.FjiImageFilenameSys))
           .ForMember(x => x.SNO, options => options.MapFrom(input => input.FjiImageSrno))
           .ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.FjiImageTypeCode))
           .ForMember(x => x.ImageId, options => options.MapFrom(input => input.FjiPkRefNo))
           .ForMember(x => x.AssetId, options => options.MapFrom(input => input.FjiFjdPkRefNo));

            CreateMap<RmFormhImageDtl, FormHImageListRequestDTO>()
         .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FhiActiveYn))
         .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FhiSubmitSts))
         .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FhiCrDt))
         .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FhiCrBy))
         .ForMember(x => x.ModifyDate, options => options.MapFrom(input => input.FhiModDt))
         .ForMember(x => x.ModifyBy, options => options.MapFrom(input => input.FhiModBy))
         .ForMember(x => x.ImageFilename, options => options.MapFrom(input => input.FhiImageFilenameUpload))
         .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.FhiImageFilenameSys))
         .ForMember(x => x.SNO, options => options.MapFrom(input => input.FhiImageSrno))
         .ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.FhiImageTypeCode))
         .ForMember(x => x.ImageId, options => options.MapFrom(input => input.FhiPkRefNo))
         .ForMember(x => x.AssetId, options => options.MapFrom(input => input.FhiFhhPkRefNo));

            CreateMap<RmAssetDefectCode, AssetDefectCodeResponseDTO>()
            .ForMember(x => x.No, options => options.MapFrom(input => input.AdcPkRefNo))
            .ForMember(x => x.AdcAgtPkRefNo, options => options.MapFrom(input => input.AdcAgtPkRefNo))
            .ForMember(x => x.GroupCode, options => options.MapFrom(input => input.AdcAssetGrpCode))
            .ForMember(x => x.DefectName, options => options.MapFrom(input => input.AdcDefName))
            .ForMember(x => x.DefectCode, options => options.MapFrom(input => input.AdcDefCode))
            .ForMember(x => x.ContractCode, options => options.MapFrom(input => input.AdcDefContractCode))
            .ForMember(x => x.FormNo, options => options.MapFrom(input => input.AdcFormNo))
            .ForMember(x => x.ActiveYN, options => options.MapFrom(input => input.AdcActiveYn));

            CreateMap<RmFormXHdr, FormXHeaderRequestDTO>()
           .ForMember(x => x.No, options => options.MapFrom(input => input.FxhPkRefNo))
           .ForMember(x => x.FddNo, options => options.MapFrom(input => input.FxhFddPkRefNo))
           .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FxhContNo))
           .ForMember(x => x.Date, options => options.MapFrom(input => input.FxhDate))
           .ForMember(x => x.Time, options => options.MapFrom(input => input.FxhTime))
           .ForMember(x => x.Name, options => options.MapFrom(input => input.FxhName))
           .ForMember(x => x.HandPhone, options => options.MapFrom(input => input.FxhHandPh))
           .ForMember(x => x.WorkPhone, options => options.MapFrom(input => input.FxhWorkPh))
           .ForMember(x => x.EmailId, options => options.MapFrom(input => input.FxhEmailId))
           .ForMember(x => x.Location, options => options.MapFrom(input => input.FxhLoc))
           .ForMember(x => x.LocRepDesc, options => options.MapFrom(input => input.FxhLocReportedDesc))
           .ForMember(x => x.Description, options => options.MapFrom(input => input.FxhDesc))
           .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FxhRmu))
           .ForMember(x => x.AttentionTo, options => options.MapFrom(input => input.FxhUsernameAttnTo))
           .ForMember(x => x.Comments, options => options.MapFrom(input => input.FxhComments))
           .ForMember(x => x.AssignWork, options => options.MapFrom(input => input.FxhAssgnWrk))
           .ForMember(x => x.ActMainCode, options => options.MapFrom(input => input.FxhActMainCode))
           .ForMember(x => x.ActMainName, options => options.MapFrom(input => input.FxhActMainName))
           .ForMember(x => x.EstDays, options => options.MapFrom(input => input.FxhEstDays))
           .ForMember(x => x.WorkSc, options => options.MapFrom(input => input.FxhWrkSc))
           .ForMember(x => x.WorkCompleted, options => options.MapFrom(input => input.FxhWrkCmpld))
           .ForMember(x => x.CaseClosedOn, options => options.MapFrom(input => input.FxhClsd))
           .ForMember(x => x.ReportedBySign, options => options.MapFrom(input => input.FxhSignPrp))
           .ForMember(x => x.ReportedByUserId, options => options.MapFrom(input => input.FxhUseridPrp))
           .ForMember(x => x.ReportedByUsername, options => options.MapFrom(input => input.FxhUsernamePrp))
           .ForMember(x => x.ReportedByDesignation, options => options.MapFrom(input => input.FxhDesignationPrp))
           .ForMember(x => x.DateReported, options => options.MapFrom(input => input.FxhDtPrp))
           .ForMember(x => x.SignVer, options => options.MapFrom(input => input.FxhSignVer))
           .ForMember(x => x.UseridVer, options => options.MapFrom(input => input.FxhUseridVer))
           .ForMember(x => x.UsernameVer, options => options.MapFrom(input => input.FxhUsernameVer))
           .ForMember(x => x.DesignationVer, options => options.MapFrom(input => input.FxhDesignationVer))
           .ForMember(x => x.DtVer, options => options.MapFrom(input => input.FxhDtVer))
           .ForMember(x => x.SignVet, options => options.MapFrom(input => input.FxhSignVet))
           .ForMember(x => x.UseridVet, options => options.MapFrom(input => input.FxhUseridVet))
           .ForMember(x => x.UsernameVet, options => options.MapFrom(input => input.FxhUsernameVet))
           .ForMember(x => x.DesignationVet, options => options.MapFrom(input => input.FxhDesignationVet))
           .ForMember(x => x.DtVet, options => options.MapFrom(input => input.FxhDtVet))
           .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FxhRemarks))
           .ForMember(x => x.ModifeidBy, options => options.MapFrom(input => input.FxhModBy))
           .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FxhModDt))
           .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FxhCrBy))
           .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FxhCrDt))
           .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FxhSubmitSts))
           .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FxhActiveYn))
           .ForMember(x => x.ModComType, options => options.MapFrom(input => input.FxhModComType))
           .ForMember(x => x.ModComDesc, options => options.MapFrom(input => input.FxhModComDesc))
           .ForMember(x => x.ModComUpload, options => options.MapFrom(input => input.FxhModComUpload))
           .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FxhRoadCode))
           .ForMember(x => x.ActSubCode, options => options.MapFrom(input => input.FxhActSubCode))
           .ForMember(x => x.ActSubName, options => options.MapFrom(input => input.FxhActSubName))
           .ForMember(x => x.EstDate, options => options.MapFrom(input => input.FxhEstDate))
           .ForMember(x => x.UseridAssgn, options => options.MapFrom(input => input.FxhUseridAssgn))
           .ForMember(x => x.UsernameAssgn, options => options.MapFrom(input => input.FxhUsernameAssgn))
           .ForMember(x => x.DtAssgn, options => options.MapFrom(input => input.FxhDtAssgn))
           .ForMember(x => x.DtJkrSent, options => options.MapFrom(input => input.FxhDtJkrSent))
            .ForMember(x => x.DtJkrRcvdFrm, options => options.MapFrom(input => input.FxhDtJkrRcvdFrm))
            .ForMember(x => x.JkrRemarks, options => options.MapFrom(input => input.FxhJkrRemarks))
            .ForMember(x => x.StsJkr, options => options.MapFrom(input => input.FxhStsJkr))
            .ForMember(x => x.ReferenceId, options => options.MapFrom(input => input.FxhRefId))
            .ForMember(x => x.Section, options => options.MapFrom(input => input.FxhSection))
            .ForMember(x => x.SignSchdVer, options => options.MapFrom(input => input.FxhSignSchdVer))
            .ForMember(x => x.UseridSchdVer, options => options.MapFrom(input => input.FxhUseridSchdVer))
            .ForMember(x => x.UsernameSchdVer, options => options.MapFrom(input => input.FxhUsernameSchdVer))
            .ForMember(x => x.DesignationSchdVer, options => options.MapFrom(input => input.FxhDesignationSchdVer))
            .ForMember(x => x.DtSchdVer, options => options.MapFrom(input => input.FxhDtSchdVer))
            .ForMember(x => x.RoadName, options => options.MapFrom(input => input.FxhRoadName))
            .ForMember(x => x.UseridAttnTo, options => options.MapFrom(input => input.FxhUseridAttnTo));

            CreateMap<RmFormXHdr, FormXHeaderResponseDTO>()
            .ForMember(x => x.No, options => options.MapFrom(input => input.FxhPkRefNo))
            .ForMember(x => x.FddNo, options => options.MapFrom(input => input.FxhFddPkRefNo))
            .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FxhContNo))
            .ForMember(x => x.Date, options => options.MapFrom(input => input.FxhDate))
            .ForMember(x => x.Time, options => options.MapFrom(input => input.FxhTime))
            .ForMember(x => x.Name, options => options.MapFrom(input => input.FxhName))
            .ForMember(x => x.HandPhone, options => options.MapFrom(input => input.FxhHandPh))
            .ForMember(x => x.WorkPhone, options => options.MapFrom(input => input.FxhWorkPh))
            .ForMember(x => x.EmailId, options => options.MapFrom(input => input.FxhEmailId))
            .ForMember(x => x.Location, options => options.MapFrom(input => input.FxhLoc))
            .ForMember(x => x.LocRepDesc, options => options.MapFrom(input => input.FxhLocReportedDesc))
            .ForMember(x => x.Description, options => options.MapFrom(input => input.FxhDesc))
            .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FxhRmu))
            .ForMember(x => x.AttentionTo, options => options.MapFrom(input => input.FxhUsernameAttnTo))
            .ForMember(x => x.Comments, options => options.MapFrom(input => input.FxhComments))
            .ForMember(x => x.AssignWork, options => options.MapFrom(input => input.FxhAssgnWrk))
            .ForMember(x => x.ActMainCode, options => options.MapFrom(input => input.FxhActMainCode))
            .ForMember(x => x.ActMainName, options => options.MapFrom(input => input.FxhActMainName))
            .ForMember(x => x.EstDays, options => options.MapFrom(input => input.FxhEstDays))
            .ForMember(x => x.WorkSc, options => options.MapFrom(input => input.FxhWrkSc))
            .ForMember(x => x.WorkCompleted, options => options.MapFrom(input => input.FxhWrkCmpld))
            .ForMember(x => x.CaseClosedOn, options => options.MapFrom(input => input.FxhClsd))
            .ForMember(x => x.ReportedBySign, options => options.MapFrom(input => input.FxhSignPrp))
            .ForMember(x => x.ReportedByUserId, options => options.MapFrom(input => input.FxhUseridPrp))
            .ForMember(x => x.ReportedByUsername, options => options.MapFrom(input => input.FxhUsernamePrp))
            .ForMember(x => x.ReportedByDesignation, options => options.MapFrom(input => input.FxhDesignationPrp))
            .ForMember(x => x.DateReported, options => options.MapFrom(input => input.FxhDtPrp))
            .ForMember(x => x.SignVer, options => options.MapFrom(input => input.FxhSignVer))
            .ForMember(x => x.UseridVer, options => options.MapFrom(input => input.FxhUseridVer))
            .ForMember(x => x.UsernameVer, options => options.MapFrom(input => input.FxhUsernameVer))
            .ForMember(x => x.DesignationVer, options => options.MapFrom(input => input.FxhDesignationVer))
            .ForMember(x => x.DtVer, options => options.MapFrom(input => input.FxhDtVer))
            .ForMember(x => x.SignVet, options => options.MapFrom(input => input.FxhSignVet))
            .ForMember(x => x.UseridVet, options => options.MapFrom(input => input.FxhUseridVet))
            .ForMember(x => x.UsernameVet, options => options.MapFrom(input => input.FxhUsernameVet))
            .ForMember(x => x.DesignationVet, options => options.MapFrom(input => input.FxhDesignationVet))
            .ForMember(x => x.DtVet, options => options.MapFrom(input => input.FxhDtVet))
            .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FxhRemarks))
            .ForMember(x => x.ModifeidBy, options => options.MapFrom(input => input.FxhModBy))
            .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FxhModDt))
            .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FxhCrBy))
            .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FxhCrDt))
            .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FxhSubmitSts))
            .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FxhActiveYn))
            .ForMember(x => x.ModComType, options => options.MapFrom(input => input.FxhModComType))
            .ForMember(x => x.ModComDesc, options => options.MapFrom(input => input.FxhModComDesc))
            .ForMember(x => x.ModComUpload, options => options.MapFrom(input => input.FxhModComUpload))
            .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FxhRoadCode))
            .ForMember(x => x.ActSubCode, options => options.MapFrom(input => input.FxhActSubCode))
            .ForMember(x => x.ActSubName, options => options.MapFrom(input => input.FxhActSubName))
            .ForMember(x => x.EstDate, options => options.MapFrom(input => input.FxhEstDate))
            .ForMember(x => x.UseridAssgn, options => options.MapFrom(input => input.FxhUseridAssgn))
            .ForMember(x => x.UsernameAssgn, options => options.MapFrom(input => input.FxhUsernameAssgn))
            .ForMember(x => x.DtAssgn, options => options.MapFrom(input => input.FxhDtAssgn))
            .ForMember(x => x.DtJkrSent, options => options.MapFrom(input => input.FxhDtJkrSent))
            .ForMember(x => x.DtJkrRcvdFrm, options => options.MapFrom(input => input.FxhDtJkrRcvdFrm))
            .ForMember(x => x.JkrRemarks, options => options.MapFrom(input => input.FxhJkrRemarks))
            .ForMember(x => x.StsJkr, options => options.MapFrom(input => input.FxhStsJkr))
            .ForMember(x => x.ReferenceId, options => options.MapFrom(input => input.FxhRefId))
            .ForMember(x => x.Section, options => options.MapFrom(input => input.FxhSection))
            .ForMember(x => x.SignSchdVer, options => options.MapFrom(input => input.FxhSignSchdVer))
            .ForMember(x => x.UseridSchdVer, options => options.MapFrom(input => input.FxhUseridSchdVer))
            .ForMember(x => x.UsernameSchdVer, options => options.MapFrom(input => input.FxhUsernameSchdVer))
            .ForMember(x => x.DesignationSchdVer, options => options.MapFrom(input => input.FxhDesignationSchdVer))
            .ForMember(x => x.DtSchdVer, options => options.MapFrom(input => input.FxhDtSchdVer))
            .ForMember(x => x.RoadName, options => options.MapFrom(input => input.FxhRoadName))
            .ForMember(x => x.UseridAttnTo, options => options.MapFrom(input => input.FxhUseridAttnTo));

            CreateMap<RmFormDHdr, FormDHeaderRequestDTO>()
                .ForMember(x => x.No, options => options.MapFrom(input => input.FdhPkRefNo))
                .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FdhContNo))
                .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FdhRmu))
                .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FdhRoadCode))
                .ForMember(x => x.DivisionName, options => options.MapFrom(input => input.FdhDivName))
                .ForMember(x => x.WeekNo, options => options.MapFrom(input => input.FdhWeekNo))
                .ForMember(x => x.Month, options => options.MapFrom(input => input.FdhMonth))
                .ForMember(x => x.Day, options => options.MapFrom(input => input.FdhDay))
                .ForMember(x => x.Year, options => options.MapFrom(input => input.FdhYear))
                .ForMember(x => x.SerialNo, options => options.MapFrom(input => input.FdhSn))
                .ForMember(x => x.ReportedBySign, options => options.MapFrom(input => input.FdhSignPrp))
                .ForMember(x => x.ReportedByUserId, options => options.MapFrom(input => input.FdhUseridPrp))
                .ForMember(x => x.ReportedByUsername, options => options.MapFrom(input => input.FdhUsernamePrp))
                 .ForMember(x => x.ReportedByDesignation, options => options.MapFrom(input => input.FdhDesignationPrp))
                .ForMember(x => x.DateReported, options => options.MapFrom(input => input.FdhDtPrp))
                .ForMember(x => x.SignVer, options => options.MapFrom(input => input.FdhSignVer))
                .ForMember(x => x.UseridVer, options => options.MapFrom(input => input.FdhUseridVer))
                .ForMember(x => x.UsernameVer, options => options.MapFrom(input => input.FdhUsernameVer))
                .ForMember(x => x.DesignationVer, options => options.MapFrom(input => input.FdhDesignationVer))
                .ForMember(x => x.DtVer, options => options.MapFrom(input => input.FdhDtVer))
                .ForMember(x => x.SignVet, options => options.MapFrom(input => input.FdhSignVet))
                .ForMember(x => x.UseridVet, options => options.MapFrom(input => input.FdhUseridVet))
                .ForMember(x => x.UsernameVet, options => options.MapFrom(input => input.FdhUsernameVet))
                .ForMember(x => x.DesignationVet, options => options.MapFrom(input => input.FdhDesignationVet))
                .ForMember(x => x.DtVet, options => options.MapFrom(input => input.FdhDtVet))
                .ForMember(x => x.SubAuthStatus, options => options.MapFrom(input => input.FdhSubAuthSts))
                .ForMember(x => x.DateSubAuth, options => options.MapFrom(input => input.FdhDtSubAuth))
                .ForMember(x => x.RcvdAuthStatus, options => options.MapFrom(input => input.FdhRcvdAuthSts))
                .ForMember(x => x.DateRcvdAuth, options => options.MapFrom(input => input.FdhDtRcvdAuth))
                .ForMember(x => x.VetAuthStatus, options => options.MapFrom(input => input.FdhVetAuthSts))
                .ForMember(x => x.DateVetAuth, options => options.MapFrom(input => input.FdhDtVetAuth))
                .ForMember(x => x.ModifeidBy, options => options.MapFrom(input => input.FdhModBy))
                .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FdhModDt))
                .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FdhCrBy))
                .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FdhCrDt))
                .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FdhSubmitSts))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FdhActiveYn))
                .ForMember(x => x.ReferenceID, options => options.MapFrom(input => input.FdhRefId))
                .ForMember(x => x.CrewUnit, options => options.MapFrom(input => input.FdhCrewUnit))
                 .ForMember(x => x.CrewUnitName, options => options.MapFrom(input => input.FdhCrewSupName))
                .ForMember(x => x.FormDDetails, options => options.MapFrom(input => input.RmFormDDtl))
            .ForMember(x => x.FormDLabour, options => options.MapFrom(input => input.RmFormDLabourDtl))
            .ForMember(x => x.FormDMaterial, options => options.MapFrom(input => input.RmFormDMaterialDtl))
            .ForMember(x => x.FormDEquip, options => options.MapFrom(input => input.RmFormDEquipDtl))
            .ForMember(x => x.SignVerSo, options => options.MapFrom(input => input.FdhSignVerSo))
            .ForMember(x => x.UseridVerSo, options => options.MapFrom(input => input.FdhUseridVerSo))
            .ForMember(x => x.UsernameVerSo, options => options.MapFrom(input => input.FdhUsernameVerSo))
            .ForMember(x => x.DesignationVerSo, options => options.MapFrom(input => input.FdhDesignationVerSo))
            .ForMember(x => x.DtVerSo, options => options.MapFrom(input => input.FdhDtVerSo))
            .ForMember(x => x.SignPrcdSo, options => options.MapFrom(input => input.FdhSignPrcdSo))
            .ForMember(x => x.UseridPrcdSo, options => options.MapFrom(input => input.FdhUseridPrcdSo))
            .ForMember(x => x.UsernamePrcdSo, options => options.MapFrom(input => input.FdhUsernamePrcdSo))
            .ForMember(x => x.DesignationPrcdSo, options => options.MapFrom(input => input.FdhDesignationPrcdSo))
            .ForMember(x => x.DtPrcdSo, options => options.MapFrom(input => input.FdhDtPrcdSo))
            .ForMember(x => x.SignAgrdSo, options => options.MapFrom(input => input.FdhSignAgrdSo))
            .ForMember(x => x.UseridAgrdSo, options => options.MapFrom(input => input.FdhUseridAgrdSo))
            .ForMember(x => x.UsernameAgrdSo, options => options.MapFrom(input => input.FdhUsernameAgrdSo))
            .ForMember(x => x.DesignationAgrdSo, options => options.MapFrom(input => input.FdhDesignationAgrdSo))
            .ForMember(x => x.DtAgrdSo, options => options.MapFrom(input => input.FdhDtAgrdSo))
            .ForMember(x => x.Status, options => options.MapFrom(i => i.FdhStatus))
            .ForMember(x => x.AuditLog, options => options.MapFrom(i => i.FdhAuditLog))
            .ForMember(x => x.WeekDate, options => options.MapFrom(i => i.FdhDate));


            CreateMap<RmFormDHdr, FormDHeaderResponseDTO>()
                .ForMember(x => x.No, options => options.MapFrom(input => input.FdhPkRefNo))
                .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FdhContNo))
                .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FdhRmu))
                .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FdhRoadCode))
                .ForMember(x => x.DivisionName, options => options.MapFrom(input => input.FdhDivName))
                .ForMember(x => x.WeekNo, options => options.MapFrom(input => input.FdhWeekNo))
                .ForMember(x => x.Month, options => options.MapFrom(input => input.FdhMonth))
                .ForMember(x => x.Day, options => options.MapFrom(input => input.FdhDay))
                .ForMember(x => x.Year, options => options.MapFrom(input => input.FdhYear))
                .ForMember(x => x.SerialNo, options => options.MapFrom(input => input.FdhSn))
                .ForMember(x => x.ReportedBySign, options => options.MapFrom(input => input.FdhSignPrp))
                .ForMember(x => x.ReportedByUserId, options => options.MapFrom(input => input.FdhUseridPrp))
                .ForMember(x => x.ReportedByUsername, options => options.MapFrom(input => input.FdhUsernamePrp))
                 .ForMember(x => x.ReportedByDesignation, options => options.MapFrom(input => input.FdhDesignationPrp))
                .ForMember(x => x.DateReported, options => options.MapFrom(input => input.FdhDtPrp))
                .ForMember(x => x.SignVer, options => options.MapFrom(input => input.FdhSignVer))
                .ForMember(x => x.UseridVer, options => options.MapFrom(input => input.FdhUseridVer))
                .ForMember(x => x.UsernameVer, options => options.MapFrom(input => input.FdhUsernameVer))
                .ForMember(x => x.DesignationVer, options => options.MapFrom(input => input.FdhDesignationVer))
                .ForMember(x => x.DtVer, options => options.MapFrom(input => input.FdhDtVer))
                .ForMember(x => x.SignVet, options => options.MapFrom(input => input.FdhSignVet))
                .ForMember(x => x.UseridVet, options => options.MapFrom(input => input.FdhUseridVet))
                .ForMember(x => x.UsernameVet, options => options.MapFrom(input => input.FdhUsernameVet))
                .ForMember(x => x.DesignationVet, options => options.MapFrom(input => input.FdhDesignationVet))
                .ForMember(x => x.DtVet, options => options.MapFrom(input => input.FdhDtVet))
                .ForMember(x => x.SubAuthStatus, options => options.MapFrom(input => input.FdhSubAuthSts))
                .ForMember(x => x.DateSubAuth, options => options.MapFrom(input => input.FdhDtSubAuth))
                .ForMember(x => x.RcvdAuthStatus, options => options.MapFrom(input => input.FdhRcvdAuthSts))
                .ForMember(x => x.DateRcvdAuth, options => options.MapFrom(input => input.FdhDtRcvdAuth))
                .ForMember(x => x.VetAuthStatus, options => options.MapFrom(input => input.FdhVetAuthSts))
                .ForMember(x => x.DateVetAuth, options => options.MapFrom(input => input.FdhDtVetAuth))
                .ForMember(x => x.ModifeidBy, options => options.MapFrom(input => input.FdhModBy))
                .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FdhModDt))
                .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FdhCrBy))
                .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FdhCrDt))
                .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FdhSubmitSts))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FdhActiveYn))
                .ForMember(x => x.ReferenceID, options => options.MapFrom(input => input.FdhRefId))
                .ForMember(x => x.CrewUnitName, options => options.MapFrom(input => input.FdhCrewUnit))
                 .ForMember(x => x.CrewUnitName, options => options.MapFrom(input => input.FdhCrewSupName))
                .ForMember(x => x.FormDDetails, options => options.MapFrom(input => input.RmFormDDtl))
                .ForMember(x => x.FormDLabour, options => options.MapFrom(input => input.RmFormDLabourDtl))
                .ForMember(x => x.FormDMaterial, options => options.MapFrom(input => input.RmFormDMaterialDtl))
                .ForMember(x => x.FormDEquip, options => options.MapFrom(input => input.RmFormDEquipDtl))
                .ForMember(x => x.SignVerSo, options => options.MapFrom(input => input.FdhSignVerSo))
            .ForMember(x => x.UseridVerSo, options => options.MapFrom(input => input.FdhUseridVerSo))
            .ForMember(x => x.UsernameVerSo, options => options.MapFrom(input => input.FdhUsernameVerSo))
            .ForMember(x => x.DesignationVerSo, options => options.MapFrom(input => input.FdhDesignationVerSo))
            .ForMember(x => x.DtVerSo, options => options.MapFrom(input => input.FdhDtVerSo))
            .ForMember(x => x.SignPrcdSo, options => options.MapFrom(input => input.FdhSignPrcdSo))
            .ForMember(x => x.UseridPrcdSo, options => options.MapFrom(input => input.FdhUseridPrcdSo))
            .ForMember(x => x.UsernamePrcdSo, options => options.MapFrom(input => input.FdhUsernamePrcdSo))
            .ForMember(x => x.DesignationPrcdSo, options => options.MapFrom(input => input.FdhDesignationPrcdSo))
            .ForMember(x => x.DtPrcdSo, options => options.MapFrom(input => input.FdhDtPrcdSo))
            .ForMember(x => x.SignAgrdSo, options => options.MapFrom(input => input.FdhSignAgrdSo))
            .ForMember(x => x.UseridAgrdSo, options => options.MapFrom(input => input.FdhUseridAgrdSo))
            .ForMember(x => x.UsernameAgrdSo, options => options.MapFrom(input => input.FdhUsernameAgrdSo))
            .ForMember(x => x.DesignationAgrdSo, options => options.MapFrom(input => input.FdhDesignationAgrdSo))
            .ForMember(x => x.DtAgrdSo, options => options.MapFrom(input => input.FdhDtAgrdSo))
            .ForMember(x => x.Status, options => options.MapFrom(input => input.FdhStatus))
            .ForMember(x => x.AuditLog, options => options.MapFrom(input => input.FdhAuditLog))
            .ForMember(x => x.WeekDate, options => options.MapFrom(input => input.FdhDate));

            CreateMap<RmFormDDtl, FormDDetailsRequestDTO>()
              .ForMember(x => x.No, options => options.MapFrom(input => input.FddPkRefNo))
              .ForMember(x => x.FormDHeaderNo, options => options.MapFrom(input => input.FddFdhPkRefNo))
              .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FddRoadCode))
              .ForMember(x => x.FrmCh, options => options.MapFrom(input => input.FddFrmCh))
              .ForMember(x => x.FrmChDeci, options => options.MapFrom(input => input.FddFrmChDeci))
              .ForMember(x => x.ToCh, options => options.MapFrom(input => input.FddToCh))
              .ForMember(x => x.ToChDeci, options => options.MapFrom(input => input.FddToChDeci))
              .ForMember(x => x.SiteRef, options => options.MapFrom(input => input.FddSiteRef))
              .ForMember(x => x.ActCode, options => options.MapFrom(input => input.FddActCode))
              .ForMember(x => x.TimeArr, options => options.MapFrom(input => input.FddTimeArr))
               .ForMember(x => x.TimeDep, options => options.MapFrom(input => input.FddTimeDep))
               .ForMember(x => x.Length, options => options.MapFrom(input => input.FddLength))
               .ForMember(x => x.Width, options => options.MapFrom(input => input.FddWidth))
               .ForMember(x => x.Height, options => options.MapFrom(input => input.FddHeight))
               .ForMember(x => x.Unit, options => options.MapFrom(input => input.FddUnit))
               .ForMember(x => x.ProdQty, options => options.MapFrom(input => input.FddProdQty))
               .ForMember(x => x.ProdUnit, options => options.MapFrom(input => input.FddProdUnit))
               .ForMember(x => x.WorkSts, options => options.MapFrom(input => input.FddWorkSts))
               .ForMember(x => x.GenRemarks, options => options.MapFrom(input => input.FddGenRemarks))
               .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FddRemarks))
               .ForMember(x => x.ModifeidBy, options => options.MapFrom(input => input.FddModBy))
               .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FddModDt))
               .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FddCrBy))
               .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FddCrDt))
               .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FddSubmitSts))
               .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FddActiveYn))
                .ForMember(x => x.ReferenceID, options => options.MapFrom(input => input.FddRefId))
                .ForMember(x => x.FormXPKRefNo, options => options.MapFrom(input => input.FddFxhPkRefNo))
                .ForMember(x => x.SourceType, options => options.MapFrom(input => input.FddSourceType))
                .ForMember(x => x.SourceRefID, options => options.MapFrom(input => input.FddSourceRefId))
                .ForMember(x => x.SrNo, options => options.MapFrom(input => input.FddSrno));

            CreateMap<RmFormDDtl, FormDDetailsResponseDTO>()
               .ForMember(x => x.No, options => options.MapFrom(input => input.FddPkRefNo))
               .ForMember(x => x.FormDHeaderNo, options => options.MapFrom(input => input.FddFdhPkRefNo))
               .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FddRoadCode))
               .ForMember(x => x.FrmCh, options => options.MapFrom(input => input.FddFrmCh))
               .ForMember(x => x.FrmChDeci, options => options.MapFrom(input => input.FddFrmChDeci))
               .ForMember(x => x.ToCh, options => options.MapFrom(input => input.FddToCh))
               .ForMember(x => x.ToChDeci, options => options.MapFrom(input => input.FddToChDeci))
               .ForMember(x => x.SiteRef, options => options.MapFrom(input => input.FddSiteRef))
               .ForMember(x => x.ActCode, options => options.MapFrom(input => input.FddActCode))
               .ForMember(x => x.TimeArr, options => options.MapFrom(input => input.FddTimeArr))
                .ForMember(x => x.TimeDep, options => options.MapFrom(input => input.FddTimeDep))
                .ForMember(x => x.Length, options => options.MapFrom(input => input.FddLength))
                .ForMember(x => x.Width, options => options.MapFrom(input => input.FddWidth))
                .ForMember(x => x.Height, options => options.MapFrom(input => input.FddHeight))
                .ForMember(x => x.Unit, options => options.MapFrom(input => input.FddUnit))
                .ForMember(x => x.ProdQty, options => options.MapFrom(input => input.FddProdQty))
                .ForMember(x => x.ProdUnit, options => options.MapFrom(input => input.FddProdUnit))
                .ForMember(x => x.WorkSts, options => options.MapFrom(input => input.FddWorkSts))
                .ForMember(x => x.GenRemarks, options => options.MapFrom(input => input.FddGenRemarks))
                .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FddRemarks))
                .ForMember(x => x.ModifeidBy, options => options.MapFrom(input => input.FddModBy))
                .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FddModDt))
                .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FddCrBy))
                .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FddCrDt))
                .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FddSubmitSts))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FddActiveYn))
                .ForMember(x => x.ReferenceID, options => options.MapFrom(input => input.FddRefId))
                .ForMember(x => x.FormXPKRefNo, options => options.MapFrom(input => input.FddFxhPkRefNo))
                .ForMember(x => x.SourceType, options => options.MapFrom(input => input.FddSourceType))
                .ForMember(x => x.SourceRefID, options => options.MapFrom(input => input.FddSourceRefId))
                .ForMember(x => x.SrNo, options => options.MapFrom(input => input.FddSrno));

            CreateMap<RmFormDEquipDtl, FormDEquipRequestDTO>()
              .ForMember(x => x.No, options => options.MapFrom(input => input.FdedPkRefNo))
              .ForMember(x => x.FormDEDFHeaderNo, options => options.MapFrom(input => input.FdedFdhPkRefNo))
              .ForMember(x => x.SerialNo, options => options.MapFrom(input => input.FdedSrno))
              .ForMember(x => x.EquipmentCode, options => options.MapFrom(input => input.FdedEqpCode))
              .ForMember(x => x.EquipmentDesc, options => options.MapFrom(input => input.FdedEqpDesc))
              .ForMember(x => x.Quantity, options => options.MapFrom(input => input.FdedEqpQty))
              .ForMember(x => x.Unit, options => options.MapFrom(input => input.FdedEqpUnit))
              .ForMember(x => x.ModifiedBy, options => options.MapFrom(input => input.FdedModBy))
              .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FdedModDt))
              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FdedCrBy))
              .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FdedCrDt))
               .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FdedSubmitSts))
               .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FdedActiveYn))
               .ForMember(x => x.CodeDesc, options => options.MapFrom(input => input.FdedCodeDesc));


            CreateMap<RmFormDEquipDtl, FormDEquipDetailsResponseDTO>()
               .ForMember(x => x.No, options => options.MapFrom(input => input.FdedPkRefNo))
               .ForMember(x => x.FormDEDFHeaderNo, options => options.MapFrom(input => input.FdedFdhPkRefNo))
               .ForMember(x => x.SerialNo, options => options.MapFrom(input => input.FdedSrno))
               .ForMember(x => x.EquipmentCode, options => options.MapFrom(input => input.FdedEqpCode))
               .ForMember(x => x.EquipmentDesc, options => options.MapFrom(input => input.FdedEqpDesc))
               .ForMember(x => x.Quantity, options => options.MapFrom(input => input.FdedEqpQty))
               .ForMember(x => x.Unit, options => options.MapFrom(input => input.FdedEqpUnit))
               .ForMember(x => x.ModifiedBy, options => options.MapFrom(input => input.FdedModBy))
               .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FdedModDt))
               .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FdedCrBy))
               .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FdedCrDt))
                .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FdedSubmitSts))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FdedActiveYn))
                .ForMember(x => x.CodeDesc, options => options.MapFrom(input => input.FdedCodeDesc));

            CreateMap<RmFormDMaterialDtl, FormDMaterialDetailsRequestDTO>()
             .ForMember(x => x.No, options => options.MapFrom(input => input.FdmdPkRefNo))
             .ForMember(x => x.FdmdFdhPkRefNo, options => options.MapFrom(input => input.FdmdFdhPkRefNo))
             .ForMember(x => x.SerialNo, options => options.MapFrom(input => input.FdmdSrno))
             .ForMember(x => x.MaterialCode, options => options.MapFrom(input => input.FdmdMtCode))
             .ForMember(x => x.MaterialDesc, options => options.MapFrom(input => input.FdmdMtDesc))
             .ForMember(x => x.Quantity, options => options.MapFrom(input => input.FdmdMtQty))
             .ForMember(x => x.Unit, options => options.MapFrom(input => input.FdmdMtUnit))
             .ForMember(x => x.ModifiedBy, options => options.MapFrom(input => input.FdmdModBy))
             .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FdmdModDt))
             .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FdmdCrBy))
             .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FdmdCrDt))
              .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FdmdSubmitSts))
              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FdmdActiveYn))
              .ForMember(x => x.CodeDesc, options => options.MapFrom(input => input.FdmdCodeDesc));

            CreateMap<RmFormDMaterialDtl, FormDMaterialDetailsResponseDTO>()
             .ForMember(x => x.No, options => options.MapFrom(input => input.FdmdPkRefNo))
             .ForMember(x => x.FdmdFdhPkRefNo, options => options.MapFrom(input => input.FdmdFdhPkRefNo))
             .ForMember(x => x.SerialNo, options => options.MapFrom(input => input.FdmdSrno))
             .ForMember(x => x.MaterialCode, options => options.MapFrom(input => input.FdmdMtCode))
             .ForMember(x => x.MaterialDesc, options => options.MapFrom(input => input.FdmdMtDesc))
             .ForMember(x => x.Quantity, options => options.MapFrom(input => input.FdmdMtQty))
             .ForMember(x => x.Unit, options => options.MapFrom(input => input.FdmdMtUnit))
             .ForMember(x => x.ModifiedBy, options => options.MapFrom(input => input.FdmdModBy))
             .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FdmdModDt))
             .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FdmdCrBy))
             .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FdmdCrDt))
              .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FdmdSubmitSts))
              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FdmdActiveYn))
               .ForMember(x => x.CodeDesc, options => options.MapFrom(input => input.FdmdCodeDesc));

            CreateMap<RmFormDLabourDtl, FormDLabourDetailsRequestDTO>()
            .ForMember(x => x.No, options => options.MapFrom(input => input.FdldPkRefNo))
            .ForMember(x => x.FdmdFdhPkRefNo, options => options.MapFrom(input => input.FdldFdhPkRefNo))
            .ForMember(x => x.SerialNo, options => options.MapFrom(input => input.FdldSrno))
            .ForMember(x => x.LabourCode, options => options.MapFrom(input => input.FdldLabCode))
            .ForMember(x => x.LabourDesc, options => options.MapFrom(input => input.FdldLabDesc))
            .ForMember(x => x.Quantity, options => options.MapFrom(input => input.FdldLabQty))
            .ForMember(x => x.Unit, options => options.MapFrom(input => input.FdldLabUnit))
            .ForMember(x => x.ModifiedBy, options => options.MapFrom(input => input.FdldModBy))
            .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FdldModDt))
            .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FdldCrBy))
            .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FdldCrDt))
             .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FdldSubmitSts))
             .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FdldActiveYn))
             .ForMember(x => x.CodeDesc, options => options.MapFrom(input => input.FdldCodeDesc));

            CreateMap<RmFormDLabourDtl, FormDLabourDetailsResponseDTO>()
            .ForMember(x => x.No, options => options.MapFrom(input => input.FdldPkRefNo))
            .ForMember(x => x.FdmdFdhPkRefNo, options => options.MapFrom(input => input.FdldFdhPkRefNo))
            .ForMember(x => x.SerialNo, options => options.MapFrom(input => input.FdldSrno))
            .ForMember(x => x.LabourCode, options => options.MapFrom(input => input.FdldLabCode))
            .ForMember(x => x.LabourDesc, options => options.MapFrom(input => input.FdldLabDesc))
            .ForMember(x => x.Quantity, options => options.MapFrom(input => input.FdldLabQty))
            .ForMember(x => x.Unit, options => options.MapFrom(input => input.FdldLabUnit))
            .ForMember(x => x.ModifiedBy, options => options.MapFrom(input => input.FdldModBy))
            .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FdldModDt))
            .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FdldCrBy))
            .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FdldCrDt))
             .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FdldSubmitSts))
             .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FdldActiveYn))
             .ForMember(x => x.CodeDesc, options => options.MapFrom(input => input.FdldCodeDesc));

            CreateMap<RmAllassetInvOthers, AssetInvOtherReqDto>()
              .ForMember(x => x.RefNo, options => options.MapFrom(input => input.AioPkRefNo))
              .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.AioAiPkRefNo))
              .ForMember(x => x.AbutFoundOthers, options => options.MapFrom(input => input.AioAbutFoundOthers))
              .ForMember(x => x.AssetGrpCode, options => options.MapFrom(input => input.AioAssetGrpCode))
              .ForMember(x => x.AssetId, options => options.MapFrom(input => input.AioAssetId))
              .ForMember(x => x.BeamsGridTrusArchOthers, options => options.MapFrom(input => input.AioBeamsGridTrusArchOthers))
              .ForMember(x => x.BearingSeatDiaphgOthers, options => options.MapFrom(input => input.AioBearingSeatDiaphgOthers))
              .ForMember(x => x.DeckPavementOthers, options => options.MapFrom(input => input.AioDeckPavementOthers))
              .ForMember(x => x.ExpanJointOthers, options => options.MapFrom(input => input.AioExpanJointOthers))
              .ForMember(x => x.MaterialOthers, options => options.MapFrom(input => input.AioMaterialOthers))
              .ForMember(x => x.ParapetRaiolingOthers, options => options.MapFrom(input => input.AioParapetRaiolingOthers))
              .ForMember(x => x.PiersPrimCompOthers, options => options.MapFrom(input => input.AioPiersPrimCompOthers))
              .ForMember(x => x.SidewalksAppSlabOthers, options => options.MapFrom(input => input.AioSidewalksAppSlabOthers))
              .ForMember(x => x.SlopeRetAionWallOthers, options => options.MapFrom(input => input.AioSlopeRetAionWallOthers))
              .ForMember(x => x.StrucCodeOthers, options => options.MapFrom(input => input.AioStrucCodeOthers))
              .ForMember(x => x.UtilitiesOthers, options => options.MapFrom(input => input.AioUtilitiesOthers))
              .ForMember(x => x.WaterDownpipeOthers, options => options.MapFrom(input => input.AioWaterDownpipeOthers))
              .ForMember(x => x.WaterwayOthers, options => options.MapFrom(input => input.AioWaterwayOthers))
              .ForMember(x => x.GrpTypeOthers, options => options.MapFrom(input => input.AioGrpTypeOthers))
              .ForMember(x => x.CulvertTypeOthers, options => options.MapFrom(input => input.AioCulvertTypeOthers))
              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.AioCrBy))
              .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.AioCrDt))
              .ForMember(x => x.ModifiedBy, options => options.MapFrom(input => input.AioModBy))
              .ForMember(x => x.ModifiedDt, options => options.MapFrom(input => input.AioModDt));

            CreateMap<RmAllassetInvOthers, AssetInvOtherResDTO>()
              .ForMember(x => x.RefNo, options => options.MapFrom(input => input.AioPkRefNo))
              .ForMember(x => x.PkRefNo, options => options.MapFrom(input => input.AioAiPkRefNo))
              .ForMember(x => x.AbutFoundOthers, options => options.MapFrom(input => input.AioAbutFoundOthers))
              .ForMember(x => x.AssetGrpCode, options => options.MapFrom(input => input.AioAssetGrpCode))
              .ForMember(x => x.AssetId, options => options.MapFrom(input => input.AioAssetId))
              .ForMember(x => x.BeamsGridTrusArchOthers, options => options.MapFrom(input => input.AioBeamsGridTrusArchOthers))
              .ForMember(x => x.BearingSeatDiaphgOthers, options => options.MapFrom(input => input.AioBearingSeatDiaphgOthers))
              .ForMember(x => x.DeckPavementOthers, options => options.MapFrom(input => input.AioDeckPavementOthers))
              .ForMember(x => x.ExpanJointOthers, options => options.MapFrom(input => input.AioExpanJointOthers))
              .ForMember(x => x.MaterialOthers, options => options.MapFrom(input => input.AioMaterialOthers))
              .ForMember(x => x.ParapetRaiolingOthers, options => options.MapFrom(input => input.AioParapetRaiolingOthers))
              .ForMember(x => x.PiersPrimCompOthers, options => options.MapFrom(input => input.AioPiersPrimCompOthers))
              .ForMember(x => x.SidewalksAppSlabOthers, options => options.MapFrom(input => input.AioSidewalksAppSlabOthers))
                 .ForMember(x => x.SlopeRetAionWallOthers, options => options.MapFrom(input => input.AioSlopeRetAionWallOthers))
              .ForMember(x => x.StrucCodeOthers, options => options.MapFrom(input => input.AioStrucCodeOthers))
              .ForMember(x => x.UtilitiesOthers, options => options.MapFrom(input => input.AioUtilitiesOthers))
              .ForMember(x => x.WaterDownpipeOthers, options => options.MapFrom(input => input.AioWaterDownpipeOthers))
              .ForMember(x => x.WaterwayOthers, options => options.MapFrom(input => input.AioWaterwayOthers))
              .ForMember(x => x.GrpTypeOthers, options => options.MapFrom(input => input.AioGrpTypeOthers))
              .ForMember(x => x.CulvertTypeOthers, options => options.MapFrom(input => input.AioCulvertTypeOthers));


            CreateMap<RmFormJHdr, FormJHeaderResponseDTO>()
                              .ForMember(x => x.Id, options => options.MapFrom(input => input.FjhRefId))
                              .ForMember(x => x.No, options => options.MapFrom(input => input.FjhPkRefNo))
                              .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FjhRoadCode))
                              .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FjhRmu))
                              .ForMember(x => x.RoadName, options => options.MapFrom(input => input.FjhRoadName))
                              .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FjhContNo))
                              .ForMember(x => x.AssetGroupCode, options => options.MapFrom(input => input.FjhAssetGroupCode))
                              .ForMember(x => x.Month, options => options.MapFrom(input => input.FjhMonth))
                              .ForMember(x => x.Year, options => options.MapFrom(input => input.FjhYear))
                              .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FjhRemarks))
                              .ForMember(x => x.SignPrp, options => options.MapFrom(input => input.FjhSignPrp))
                              .ForMember(x => x.UseridPrp, options => options.MapFrom(input => input.FjhUseridPrp))
                              .ForMember(x => x.UsernamePrp, options => options.MapFrom(input => input.FjhUsernamePrp))
                              .ForMember(x => x.DesignationPrp, options => options.MapFrom(input => input.FjhDesignationPrp))
                              .ForMember(x => x.DtPrp, options => options.MapFrom(input => input.FjhDtPrp))
                              .ForMember(x => x.SignVer, options => options.MapFrom(input => input.FjhSignVer))
                              .ForMember(x => x.UseridVer, options => options.MapFrom(input => input.FjhUseridVer))
                              .ForMember(x => x.UsernameVer, options => options.MapFrom(input => input.FjhUsernameVer))
                              .ForMember(x => x.DesignationVer, options => options.MapFrom(input => input.FjhDesignationVer))
                              .ForMember(x => x.VerifiedDt, options => options.MapFrom(input => input.FjhDtVer))
                              .ForMember(x => x.useridVet, options => options.MapFrom(input => input.FjhUseridVet))
                              .ForMember(x => x.UsernameVet, options => options.MapFrom(input => input.FjhUsernameVet))
                              .ForMember(x => x.DesignationVet, options => options.MapFrom(input => input.FjhDesignationVet))
                              .ForMember(x => x.VerifiedVDt, options => options.MapFrom(input => input.FjhDtVet))
                              .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FjhModBy))
                              .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FjhModDt))
                              .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FjhCrBy))
                              .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FjhCrDt))
                              .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FjhSubmitSts))
                              .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FjhActiveYn))
                              .ForMember(x => x.SignVet, options => options.MapFrom(input => input.FjhSignVet))
                              .ForMember(x => x.section, options => options.MapFrom(input => input.FjhSection))
                              .ForMember(x => x.Status, options => options.MapFrom(input => input.FjhStatus))
                              .ForMember(x => x.AuditLog, options => options.MapFrom(input => input.FjhAuditLog));



            CreateMap<RmFormJDtl, FormJDetailsRequestDTO>()
                             .ForMember(x => x.HeaderNo, options => options.MapFrom(input => input.FjdFjhPkRefNo))
                             .ForMember(x => x.No, options => options.MapFrom(input => input.FjdPkRefNo))
                             .ForMember(x => x.FadRefNO, options => options.MapFrom(input => input.FjdRefId))
                             .ForMember(x => x.Dt, options => options.MapFrom(input => input.FjdDt))
                             .ForMember(x => x.Srno, options => options.MapFrom(input => input.FjdSrno))
                             .ForMember(x => x.SiteRef, options => options.MapFrom(input => input.FjdSiteRef))
                             .ForMember(x => x.FromCh, options => options.MapFrom(input => input.FjdFrmCh))
                             .ForMember(x => x.FromChDeci, options => options.MapFrom(input => input.FjdFrmChDeci))
                             .ForMember(x => x.ToCh, options => options.MapFrom(input => input.FjdToCh))
                             .ForMember(x => x.ToChDeci, options => options.MapFrom(input => input.FjdToChDeci))
                             .ForMember(x => x.DefCode, options => options.MapFrom(input => input.FjdDefCode))
                             .ForMember(x => x.Length, options => options.MapFrom(input => input.FjdLength))
                             .ForMember(x => x.Width, options => options.MapFrom(input => input.FjdWidth))
                             .ForMember(x => x.Height, options => options.MapFrom(input => input.FjdHeight))
                             .ForMember(x => x.WorkNeed, options => options.MapFrom(input => input.FjdWrkNeed))
                             .ForMember(x => x.Problem, options => options.MapFrom(input => input.FjdPrblmDesc))
                             .ForMember(x => x.Priority, options => options.MapFrom(input => input.FjdPriority))
                             .ForMember(x => x.Wi, options => options.MapFrom(input => input.FjdWi))
                             .ForMember(x => x.Ws, options => options.MapFrom(input => input.FjdWs))
                             .ForMember(x => x.Wtc, options => options.MapFrom(input => input.FjdWtc))
                             .ForMember(x => x.Wc, options => options.MapFrom(input => input.FjdWc))
                             .ForMember(x => x.Rt, options => options.MapFrom(input => input.FjdRt))
                             .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FjdRemarks))
                             .ForMember(x => x.FormhApp, options => options.MapFrom(input => input.FjdFormhApp))
                             .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FjdModBy))
                             .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FjdModDt))
                             .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FjdCrBy))
                             .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FjdCrDt))
                             .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FjdSubmitSts))
                             .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FjdActiveYn));


            CreateMap<RmFormJDtl, FormJDetailResponseDTO>()
                .ForMember(x => x.No, options => options.MapFrom(input => input.FjdPkRefNo))
                .ForMember(x => x.HeaderNo, options => options.MapFrom(input => input.FjdFjhPkRefNo))
                .ForMember(x => x.Dt, options => options.MapFrom(input => input.FjdDt))
                .ForMember(x => x.Srno, options => options.MapFrom(input => input.FjdSrno))
                .ForMember(x => x.SiteRef, options => options.MapFrom(input => input.FjdSiteRef))
                .ForMember(x => x.FromCh, options => options.MapFrom(input => input.FjdFrmCh))
                .ForMember(x => x.FromChDeci, options => options.MapFrom(input => input.FjdFrmChDeci))
                .ForMember(x => x.ToCh, options => options.MapFrom(input => input.FjdToCh))
                .ForMember(x => x.ToChDeci, options => options.MapFrom(input => input.FjdToChDeci))
                .ForMember(x => x.DefCode, options => options.MapFrom(input => input.FjdDefCode))
                .ForMember(x => x.Problem, options => options.MapFrom(input => input.FjdPrblmDesc))
                .ForMember(x => x.WorkNeed, options => options.MapFrom(input => input.FjdWrkNeed))
                .ForMember(x => x.Length, options => options.MapFrom(input => input.FjdLength))
                .ForMember(x => x.Width, options => options.MapFrom(input => input.FjdWidth))
                .ForMember(x => x.Height, options => options.MapFrom(input => input.FjdHeight))
                .ForMember(x => x.Priority, options => options.MapFrom(input => input.FjdPriority))
                .ForMember(x => x.Ws, options => options.MapFrom(input => input.FjdWs))
                .ForMember(x => x.Wtc, options => options.MapFrom(input => input.FjdWtc))
                .ForMember(x => x.Wc, options => options.MapFrom(input => input.FjdWc))
                .ForMember(x => x.Wi, options => options.MapFrom(input => input.FjdWi))
                .ForMember(x => x.Rt, options => options.MapFrom(input => input.FjdRt))
                .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FjdRemarks))
                .ForMember(x => x.FormhApp, options => options.MapFrom(input => input.FjdFormhApp))
                .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FjdModBy))
                .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FjdModDt))
                .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FjdCrBy))
                .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FjdCrDt))
                .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FjdSubmitSts))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FjdActiveYn))
                .ForMember(x => x.FadRefNO, options => options.MapFrom(input => input.FjdRefId));


            CreateMap<RmFormjImageDtl, FormJImageRequestDTO>()
                .ForMember(x => x.No, options => options.MapFrom(input => input.FjiPkRefNo))
                .ForMember(x => x.DetailNo, options => options.MapFrom(input => input.FjiFjdPkRefNo))
                .ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.FjiImageTypeCode))
                .ForMember(x => x.ImageSrno, options => options.MapFrom(input => input.FjiImageSrno))
                .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.FjiImageFilenameSys))
                .ForMember(x => x.ImageFilenameUpload, options => options.MapFrom(input => input.FjiImageFilenameUpload))
                .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FjiModBy))
                .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FjiModDt))
                .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FjiCrBy))
                .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FjiCrDt))
                .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FjiSubmitSts))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FjiActiveYn))
                .ForMember(x => x.ImageUserFilePath, options => options.MapFrom(input => input.FjiImageUserFilePath));


            CreateMap<RmFormjImageDtl, FormJImageResponseDTO>()
                .ForMember(x => x.No, options => options.MapFrom(input => input.FjiPkRefNo))
                .ForMember(x => x.DetailNo, options => options.MapFrom(input => input.FjiFjdPkRefNo))
                .ForMember(x => x.ImageTypeCode, options => options.MapFrom(input => input.FjiImageTypeCode))
                .ForMember(x => x.ImageSrno, options => options.MapFrom(input => input.FjiImageSrno))
                .ForMember(x => x.ImageFilenameSys, options => options.MapFrom(input => input.FjiImageFilenameSys))
                .ForMember(x => x.ImageFilenameUpload, options => options.MapFrom(input => input.FjiImageFilenameUpload))
                .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FjiModBy))
                .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FjiModDt))
                .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FjiCrBy))
                .ForMember(x => x.CreatedDt, options => options.MapFrom(input => input.FjiCrDt))
                .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FjiSubmitSts))
                .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FjiActiveYn))
                .ForMember(x => x.ImageUserFilePath, options => options.MapFrom(input => input.FjiImageUserFilePath));

            CreateMap<RmFormN1Hdr, FormN1HeaderResponseDTO>()
                .ForMember(x => x.No, options => options.MapFrom(input => input.FnihPkRefNo))
                 .ForMember(x => x.SourceType, options => options.MapFrom(input => input.FnihSourceType))
                  .ForMember(x => x.QA2RefNo, options => options.MapFrom(input => input.FnihFqaiidPkRefNo))
                   .ForMember(x => x.S1RefNo, options => options.MapFrom(input => input.FnihFsidPkRefNo))
                    .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FnihContNo))
                     .ForMember(x => x.ReferenceID, options => options.MapFrom(input => input.FnihRefId))
                      .ForMember(x => x.NCNo, options => options.MapFrom(input => input.FnihNcnNo))
                       .ForMember(x => x.DivisonName, options => options.MapFrom(input => input.FnihDiv))
                        .ForMember(x => x.RMU, options => options.MapFrom(input => input.FnihRmu))
                         .ForMember(x => x.ServiceProvider, options => options.MapFrom(input => input.FnihSrProvider))
                         .ForMember(x => x.AttentionToUserid, options => options.MapFrom(input => input.FnihUseridAttnTo))
                         .ForMember(x => x.AttnToUsername, options => options.MapFrom(input => input.FnihUsernameAttnTo))
                         .ForMember(x => x.CcUserid, options => options.MapFrom(input => input.FnihUseridCc))
                         .ForMember(x => x.CcUsername, options => options.MapFrom(input => input.FnihUsernameCc))
                         .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FnihRoadCode))
                         .ForMember(x => x.RoadName, options => options.MapFrom(input => input.FnihRoadName))
                         .ForMember(x => x.FromChainage, options => options.MapFrom(input => input.FnihFrmCh))
                         .ForMember(x => x.FromChainageDeci, options => options.MapFrom(input => input.FnihFrmChDeci))
                         .ForMember(x => x.ToChainage, options => options.MapFrom(input => input.FnihToCh))
                          .ForMember(x => x.ToChainageDeci, options => options.MapFrom(input => input.FnihToChDeci))
                           .ForMember(x => x.NcDescription, options => options.MapFrom(input => input.FnihNcDesc))
                    .ForMember(x => x.CorrectActionTakenDate, options => options.MapFrom(input => input.FnihDtCorrectTkn))
                        .ForMember(x => x.IssuedBySignature, options => options.MapFrom(input => input.FnihSignIssued))
                        .ForMember(x => x.IssuedByUserId, options => options.MapFrom(input => input.FnihUseridIssued))
                        .ForMember(x => x.IssuedByUsername, options => options.MapFrom(input => input.FnihUsernameIssued))
                        .ForMember(x => x.IssuedByDesignation, options => options.MapFrom(input => input.FnihDesignationIssued))
                            .ForMember(x => x.RecievedBySignature, options => options.MapFrom(input => input.FnihSignRcvd))
                            .ForMember(x => x.RecievedByUserId, options => options.MapFrom(input => input.FnihUseridRcvd))
                            .ForMember(x => x.RecievedByUsername, options => options.MapFrom(input => input.FnihUsernameRcvd))
                            .ForMember(x => x.RecievedByDesignation, options => options.MapFrom(input => input.FnihDesignationRcvd))
                        .ForMember(x => x.RecievedByDate, options => options.MapFrom(input => input.FnihDtRcvd))
                        .ForMember(x => x.ProposedReworkSpecification, options => options.MapFrom(input => input.FnihProposedRewrkSpec))
                        .ForMember(x => x.CorrectiveSignature, options => options.MapFrom(input => input.FnihSignCorrective))
                        .ForMember(x => x.CorrectiveUserid, options => options.MapFrom(input => input.FnihUseridCorrective))
                         .ForMember(x => x.CorrectiveUsername, options => options.MapFrom(input => input.FnihUsernameCorrective))
                         .ForMember(x => x.CorrectiveDesignation, options => options.MapFrom(input => input.FnihDesignationCorrective))
                         .ForMember(x => x.CorrectiveDate, options => options.MapFrom(input => input.FnihDtCorrective))
                         .ForMember(x => x.AcceptedBySignature, options => options.MapFrom(input => input.FnihSignAccptd))
                         .ForMember(x => x.AcceptedByUserId, options => options.MapFrom(input => input.FnihUseridAccptd))
                         .ForMember(x => x.AcceptedByUsername, options => options.MapFrom(input => input.FnihUsernameAccptd))
                         .ForMember(x => x.AcceptedByDesignation, options => options.MapFrom(input => input.FnihDesignationAccptd))
                         .ForMember(x => x.AcceptedByDate, options => options.MapFrom(input => input.FnihDtAccptd))
                         .ForMember(x => x.IsCorrectionTaken, options => options.MapFrom(input => input.FnihCorrectionTkn))
                         .ForMember(x => x.ISNcrIssued, options => options.MapFrom(input => input.FnihNcrIssue))
                         .ForMember(x => x.IssuedDate, options => options.MapFrom(input => input.FnihIssueDt))
                         .ForMember(x => x.OtherFollowAction, options => options.MapFrom(input => input.FnihOthrFllwAct))
                         .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FnihRemarks))
                         .ForMember(x => x.VerifiedBySignature, options => options.MapFrom(input => input.FnihSignVer))
                         .ForMember(x => x.VerifiedByUserId, options => options.MapFrom(input => input.FnihUseridVer))
                         .ForMember(x => x.VerifiedByUsername, options => options.MapFrom(input => input.FnihUsernameVer))
                         .ForMember(x => x.VerifiedByDesignation, options => options.MapFrom(input => input.FnihDesignationVer))
                         .ForMember(x => x.VerifiedByDate, options => options.MapFrom(input => input.FnihDtVer))
                         .ForMember(x => x.ModifiedBy, options => options.MapFrom(input => input.FnihModBy))
                        .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FnihModDt))
                        .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FnihCrBy))
                        .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FnihCrDt))
                        .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FnihSubmitSts))
                        .ForMember(x => x.isActive, options => options.MapFrom(input => input.FnihActiveYn))
                        .ForMember(x => x.AttentionToDesignation, options => options.MapFrom(input => input.FnihDesignationAttnTo))
                        .ForMember(x => x.CCDesignation, options => options.MapFrom(input => input.FnihDesignationCc))
                        .ForMember(x => x.CorrectionTakenBefore, options => options.MapFrom(input => input.FnihCrctTknBef))
                        .ForMember(x => x.IssueDateHdr, options => options.MapFrom(input => input.FnihDtIssue));


            /////

            CreateMap<RmFormN2Hdr, FormN2HeaderRequestDTO>()
            .ForMember(x => x.No, options => options.MapFrom(input => input.FnthPkRefNo))
            .ForMember(x => x.SourceType, options => options.MapFrom(input => input.FnthSourceType))
            .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FnthContNo))
             .ForMember(x => x.ReferenceID, options => options.MapFrom(input => input.FnthRefId))
             .ForMember(x => x.NcrNo, options => options.MapFrom(input => input.FnthNcrNo))
             .ForMember(x => x.IssuedDate, options => options.MapFrom(input => input.FnthIssueDt))
             .ForMember(x => x.Region, options => options.MapFrom(input => input.FnthRegion))
             .ForMember(x => x.Division, options => options.MapFrom(input => input.FnthDiv))
             .ForMember(x => x.RMU, options => options.MapFrom(input => input.FnthRmu))
             .ForMember(x => x.ServiceProvider, options => options.MapFrom(input => input.FnthSrProvider))
             .ForMember(x => x.AttentionTo, options => options.MapFrom(input => input.FnthAttnTo))
             .ForMember(x => x.Cc, options => options.MapFrom(input => input.FnthCc))
             .ForMember(x => x.Subject, options => options.MapFrom(input => input.FnthSubject))
             .ForMember(x => x.NonConfDetail, options => options.MapFrom(input => input.FnthNonConfDtl))
             .ForMember(x => x.IssuedBySignature, options => options.MapFrom(input => input.FnthSignIssued))
             .ForMember(x => x.IssuedByUserId, options => options.MapFrom(input => input.FnthUseridIssued))
             .ForMember(x => x.IssuedByUsername, options => options.MapFrom(input => input.FnthUsernameIssued))
             .ForMember(x => x.IssuedByDesignation, options => options.MapFrom(input => input.FnthDesignationIssued))
             .ForMember(x => x.RcvdBySign, options => options.MapFrom(input => input.FnthSignRcvd))
             .ForMember(x => x.RcvdByUserid, options => options.MapFrom(input => input.FnthUseridRcvd))
             .ForMember(x => x.RcvdByUsername, options => options.MapFrom(input => input.FnthUsernameRcvd))
             .ForMember(x => x.RcvdByDesignation, options => options.MapFrom(input => input.FnthDesignationRcvd))
             .ForMember(x => x.RcvdByDate, options => options.MapFrom(input => input.FnthDtRcvd))
             .ForMember(x => x.ProposedCrctAct, options => options.MapFrom(input => input.FnthProposedCrctAct))
             .ForMember(x => x.CorrectiveSignature, options => options.MapFrom(input => input.FnthSignCorrective))
             .ForMember(x => x.CorrectiveUserId, options => options.MapFrom(input => input.FnthUseridCorrective))
             .ForMember(x => x.CorrectiveUsername, options => options.MapFrom(input => input.FnthUsernameCorrective))
             .ForMember(x => x.CorrectiveDesignation, options => options.MapFrom(input => input.FnthDesignationCorrective))
             .ForMember(x => x.CorrectiveDate, options => options.MapFrom(input => input.FnthDtCorrective))
             .ForMember(x => x.AccptdBySignature, options => options.MapFrom(input => input.FnthSignAccptd))
             .ForMember(x => x.AccptdByUserId, options => options.MapFrom(input => input.FnthUseridAccptd))
             .ForMember(x => x.AccptdByUsername, options => options.MapFrom(input => input.FnthUsernameAccptd))
             .ForMember(x => x.AccptdByDesignation, options => options.MapFrom(input => input.FnthDesignationAccptd))
             .ForMember(x => x.AccptdByDate, options => options.MapFrom(input => input.FnthDtAccptd))
             .ForMember(x => x.PreventiveAction, options => options.MapFrom(input => input.FnthPreventiveAct))
             .ForMember(x => x.PreventiveSignature, options => options.MapFrom(input => input.FnthSignPreventive))
             .ForMember(x => x.PreventiveUserId, options => options.MapFrom(input => input.FnthUseridPreventive))
             .ForMember(x => x.PreventiveUsername, options => options.MapFrom(input => input.FnthUsernamePreventive))
             .ForMember(x => x.PreventiveDesignation, options => options.MapFrom(input => input.FnthDesignationPreventive))
             .ForMember(x => x.PreventiveDate, options => options.MapFrom(input => input.FnthDtPreventive))
             .ForMember(x => x.OthrrFollowUpAction, options => options.MapFrom(input => input.FnohOthrFllwAct))
             .ForMember(x => x.CloseOutDate, options => options.MapFrom(input => input.FnthCloseOutDt))
             .ForMember(x => x.CloseOutRemarks, options => options.MapFrom(input => input.FnthCloseOutRemarks))
             .ForMember(x => x.VerifiedBySign, options => options.MapFrom(input => input.FnthSignVer))
             .ForMember(x => x.VerifiedByUserid, options => options.MapFrom(input => input.FnthUseridVer))
             .ForMember(x => x.VerifiedByUsername, options => options.MapFrom(input => input.FnthUsernameVer))
             .ForMember(x => x.VerifiedByDesignation, options => options.MapFrom(input => input.FnthDesignationVer))
             .ForMember(x => x.VerifiedByDate, options => options.MapFrom(input => input.FnthDtVer))
             .ForMember(x => x.ModefiedBy, options => options.MapFrom(input => input.FnihModBy))
             .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FnihModDt))
             .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FnihCrBy))
             .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FnihCrDt))
             .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FnihSubmitSts))
             .ForMember(x => x.isActive, options => options.MapFrom(input => input.FnihActiveYn))
 .ForMember(x => x.FormN1RefNo, options => options.MapFrom(input => input.FnthFnihPkRefNo))
 .ForMember(x => x.PreventiveAcceptedSign, options => options.MapFrom(input => input.FnthSignPrvAccptd))
 .ForMember(x => x.PreventiveAcceptedUserId, options => options.MapFrom(input => input.FnthUseridPrvAccptd))
 .ForMember(x => x.PreventiveAcceptedUsername, options => options.MapFrom(input => input.FnthUsernamePrvAccptd))
 .ForMember(x => x.PreventiveAcceptedDessig, options => options.MapFrom(input => input.FnthDesignationPrvAccptd))
 .ForMember(x => x.PreventiveAcceptedDate, options => options.MapFrom(input => input.FnthDtPrvAccptd))
 .ForMember(x => x.AttentionToUsername, options => options.MapFrom(input => input.FnthUsernameAttnTo))
 .ForMember(x => x.CCUsername, options => options.MapFrom(input => input.FnthUsernameCc))
 .ForMember(x => x.AttentionToDesignation, options => options.MapFrom(input => input.FnihDesignationAttnTo))
.ForMember(x => x.CCDesignation, options => options.MapFrom(input => input.FnihDesignationCc))
.ForMember(x => x.N1HeaderDetails, options => options.MapFrom(input => input.FnthFnihPkRefNoNavigation))
.ForMember(x => x.Status, options => options.MapFrom(input => input.FnthStatus))
.ForMember(x => x.AuditLog, options => options.MapFrom(input => input.FnthAuditLog));



            CreateMap<RmFormN2Hdr, FormN2HeaderResponseDTO>()
            .ForMember(x => x.No, options => options.MapFrom(input => input.FnthPkRefNo))
            .ForMember(x => x.SourceType, options => options.MapFrom(input => input.FnthSourceType))
            .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FnthContNo))
             .ForMember(x => x.ReferenceID, options => options.MapFrom(input => input.FnthRefId))
             .ForMember(x => x.NcrNo, options => options.MapFrom(input => input.FnthNcrNo))
             .ForMember(x => x.IssuedDate, options => options.MapFrom(input => input.FnthIssueDt))
             .ForMember(x => x.Region, options => options.MapFrom(input => input.FnthRegion))
             .ForMember(x => x.Division, options => options.MapFrom(input => input.FnthDiv))
             .ForMember(x => x.RMU, options => options.MapFrom(input => input.FnthRmu))
             .ForMember(x => x.ServiceProvider, options => options.MapFrom(input => input.FnthSrProvider))
             .ForMember(x => x.AttentionTo, options => options.MapFrom(input => input.FnthAttnTo))
             .ForMember(x => x.Cc, options => options.MapFrom(input => input.FnthCc))
             .ForMember(x => x.Subject, options => options.MapFrom(input => input.FnthSubject))
             .ForMember(x => x.NonConfDetail, options => options.MapFrom(input => input.FnthNonConfDtl))
             .ForMember(x => x.IssuedBySignature, options => options.MapFrom(input => input.FnthSignIssued))
             .ForMember(x => x.IssuedByUserId, options => options.MapFrom(input => input.FnthUseridIssued))
             .ForMember(x => x.IssuedByUsername, options => options.MapFrom(input => input.FnthUsernameIssued))
             .ForMember(x => x.IssuedByDesignation, options => options.MapFrom(input => input.FnthDesignationIssued))
             .ForMember(x => x.RcvdBySign, options => options.MapFrom(input => input.FnthSignRcvd))
             .ForMember(x => x.RcvdByUserid, options => options.MapFrom(input => input.FnthUseridRcvd))
             .ForMember(x => x.RcvdByUsername, options => options.MapFrom(input => input.FnthUsernameRcvd))
             .ForMember(x => x.RcvdByDesignation, options => options.MapFrom(input => input.FnthDesignationRcvd))
             .ForMember(x => x.RcvdByDate, options => options.MapFrom(input => input.FnthDtRcvd))
             .ForMember(x => x.ProposedCrctAct, options => options.MapFrom(input => input.FnthProposedCrctAct))
             .ForMember(x => x.CorrectiveSignature, options => options.MapFrom(input => input.FnthSignCorrective))
             .ForMember(x => x.CorrectiveUserId, options => options.MapFrom(input => input.FnthUseridCorrective))
             .ForMember(x => x.CorrectiveUsername, options => options.MapFrom(input => input.FnthUsernameCorrective))
             .ForMember(x => x.CorrectiveDesignation, options => options.MapFrom(input => input.FnthDesignationCorrective))
             .ForMember(x => x.CorrectiveDate, options => options.MapFrom(input => input.FnthDtCorrective))
             .ForMember(x => x.AccptdBySignature, options => options.MapFrom(input => input.FnthSignAccptd))
             .ForMember(x => x.AccptdByUserId, options => options.MapFrom(input => input.FnthUseridAccptd))
             .ForMember(x => x.AccptdByUsername, options => options.MapFrom(input => input.FnthUsernameAccptd))
             .ForMember(x => x.AccptdByDesignation, options => options.MapFrom(input => input.FnthDesignationAccptd))
             .ForMember(x => x.AccptdByDate, options => options.MapFrom(input => input.FnthDtAccptd))
             .ForMember(x => x.PreventiveAction, options => options.MapFrom(input => input.FnthPreventiveAct))
             .ForMember(x => x.PreventiveSignature, options => options.MapFrom(input => input.FnthSignPreventive))
             .ForMember(x => x.PreventiveUserId, options => options.MapFrom(input => input.FnthUseridPreventive))
             .ForMember(x => x.PreventiveUsername, options => options.MapFrom(input => input.FnthUsernamePreventive))
             .ForMember(x => x.PreventiveDesignation, options => options.MapFrom(input => input.FnthDesignationPreventive))
             .ForMember(x => x.PreventiveDate, options => options.MapFrom(input => input.FnthDtPreventive))
             .ForMember(x => x.OthrrFollowUpAction, options => options.MapFrom(input => input.FnohOthrFllwAct))
             .ForMember(x => x.CloseOutDate, options => options.MapFrom(input => input.FnthCloseOutDt))
             .ForMember(x => x.CloseOutRemarks, options => options.MapFrom(input => input.FnthCloseOutRemarks))
             .ForMember(x => x.VerifiedBySign, options => options.MapFrom(input => input.FnthSignVer))
             .ForMember(x => x.VerifiedByUserid, options => options.MapFrom(input => input.FnthUseridVer))
             .ForMember(x => x.VerifiedByUsername, options => options.MapFrom(input => input.FnthUsernameVer))
             .ForMember(x => x.VerifiedByDesignation, options => options.MapFrom(input => input.FnthDesignationVer))
             .ForMember(x => x.VerifiedByDate, options => options.MapFrom(input => input.FnthDtVer))
             .ForMember(x => x.ModefiedBy, options => options.MapFrom(input => input.FnihModBy))
             .ForMember(x => x.ModifiedDate, options => options.MapFrom(input => input.FnihModDt))
             .ForMember(x => x.CreatedBy, options => options.MapFrom(input => input.FnihCrBy))
             .ForMember(x => x.CreatedDate, options => options.MapFrom(input => input.FnihCrDt))
             .ForMember(x => x.SubmitStatus, options => options.MapFrom(input => input.FnihSubmitSts))
             .ForMember(x => x.isActive, options => options.MapFrom(input => input.FnihActiveYn))
             .ForMember(x => x.FormN1RefNo, options => options.MapFrom(input => input.FnthFnihPkRefNo))
             .ForMember(x => x.PreventiveAcceptedSign, options => options.MapFrom(input => input.FnthSignPrvAccptd))
             .ForMember(x => x.PreventiveAcceptedUserId, options => options.MapFrom(input => input.FnthUseridPrvAccptd))
             .ForMember(x => x.PreventiveAcceptedUsername, options => options.MapFrom(input => input.FnthUsernamePrvAccptd))
             .ForMember(x => x.PreventiveAcceptedDessig, options => options.MapFrom(input => input.FnthDesignationPrvAccptd))
             .ForMember(x => x.PreventiveAcceptedDate, options => options.MapFrom(input => input.FnthDtPrvAccptd))
             .ForMember(x => x.AttentionToUsername, options => options.MapFrom(input => input.FnthUsernameAttnTo))
             .ForMember(x => x.CCUsername, options => options.MapFrom(input => input.FnthUsernameCc))
             .ForMember(x => x.AttentionToDesignation, options => options.MapFrom(input => input.FnihDesignationAttnTo))
            .ForMember(x => x.CCDesignation, options => options.MapFrom(input => input.FnihDesignationCc))
            .ForMember(x => x.N1HeaderDetails, options => options.MapFrom(input => input.FnthFnihPkRefNoNavigation));


            CreateMap<RmFormQa2Hdr, FormQa2HeaderRequestDTO>()
            .ForMember(x => x.No, options => options.MapFrom(input => input.FqaiihPkRefNo))
            .ForMember(x => x.RefId, options => options.MapFrom(input => input.FqaiihRefId))
            .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FqaiihContNo))
             .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FqaiihRoadCode))
             .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FqaiihRmu))
             .ForMember(x => x.RoadName, options => options.MapFrom(input => input.FqaiihRoadName))
             .ForMember(x => x.Month, options => options.MapFrom(input => input.FqaiihMonth))
             .ForMember(x => x.Year, options => options.MapFrom(input => input.FqaiihYear))
             .ForMember(x => x.Section, options => options.MapFrom(input => input.FqaiihSection))
             .ForMember(x => x.CrewSup, options => options.MapFrom(input => input.FqaiihCrewSup))
             .ForMember(x => x.CrewSupName, options => options.MapFrom(input => input.FqaiihCrewSupName))
             .ForMember(x => x.Comments, options => options.MapFrom(input => input.FqaiihComments))
             .ForMember(x => x.SignQaIni, options => options.MapFrom(input => input.FqaiihSignQaIni))
             .ForMember(x => x.UseridQaIni, options => options.MapFrom(input => input.FqaiihUseridQaIni))
             .ForMember(x => x.UsernameQaIni, options => options.MapFrom(input => input.FqaiihUsernameQaIni))
             .ForMember(x => x.DesignationQaIni, options => options.MapFrom(input => input.FqaiihDesignationQaIni))
             .ForMember(x => x.RemarksQaIni, options => options.MapFrom(input => input.FqaiihRemarksQaIni))
             .ForMember(x => x.SignQaI, options => options.MapFrom(input => input.FqaiihSignQaI))
             .ForMember(x => x.UseridQaI, options => options.MapFrom(input => input.FqaiihUseridQaI))
             .ForMember(x => x.UsernameQaI, options => options.MapFrom(input => input.FqaiihUsernameQaI))
             .ForMember(x => x.DesignationQaI, options => options.MapFrom(input => input.FqaiihDesignationQaI))
             .ForMember(x => x.RemarksQaI, options => options.MapFrom(input => input.FqaiihRemarksQaI))
             .ForMember(x => x.SignQaIi, options => options.MapFrom(input => input.FqaiihSignQaIi))
             .ForMember(x => x.UseridQaIi, options => options.MapFrom(input => input.FqaiihUseridQaIi))
             .ForMember(x => x.UsernameQaIi, options => options.MapFrom(input => input.FqaiihUsernameQaIi))
             .ForMember(x => x.DesignationQaIi, options => options.MapFrom(input => input.FqaiihDesignationQaIi))
             .ForMember(x => x.RemarksQaIi, options => options.MapFrom(input => input.FqaiihRemarksQaIi))
             .ForMember(x => x.SignQaIii, options => options.MapFrom(input => input.FqaiihSignQaIii))
             .ForMember(x => x.UseridQaIii, options => options.MapFrom(input => input.FqaiihUseridQaIii))
             .ForMember(x => x.UsernameQaIii, options => options.MapFrom(input => input.FqaiihUsernameQaIii))
             .ForMember(x => x.DesignationQaIii, options => options.MapFrom(input => input.FqaiihDesignationQaIii))
             .ForMember(x => x.RemarksQaIii, options => options.MapFrom(input => input.FqaiihRemarksQaIii))
             .ForMember(x => x.SignQaIv, options => options.MapFrom(input => input.FqaiihSignQaIv))
             .ForMember(x => x.UseridQaIv, options => options.MapFrom(input => input.FqaiihUseridQaIv))
             .ForMember(x => x.UsernameQaIv, options => options.MapFrom(input => input.FqaiihUsernameQaIv))
             .ForMember(x => x.DesignationQaIv, options => options.MapFrom(input => input.FqaiihDesignationQaIv))
             .ForMember(x => x.RemarksQaIv, options => options.MapFrom(input => input.FqaiihRemarksQaIv))
             .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FqaiihModBy))
             .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FqaiihModDt))
             .ForMember(x => x.CrBy, options => options.MapFrom(input => input.FqaiihCrBy))
             .ForMember(x => x.CrDt, options => options.MapFrom(input => input.FqaiihCrDt))
             .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FqaiihSubmitSts))
             .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FqaiihActiveYn));

            CreateMap<RmFormQa2Hdr, FormQa2HeaderResponseDTO>()
           .ForMember(x => x.No, options => options.MapFrom(input => input.FqaiihPkRefNo))
           .ForMember(x => x.RefId, options => options.MapFrom(input => input.FqaiihRefId))
           .ForMember(x => x.ContNo, options => options.MapFrom(input => input.FqaiihContNo))
            .ForMember(x => x.RoadCode, options => options.MapFrom(input => input.FqaiihRoadCode))
            .ForMember(x => x.Rmu, options => options.MapFrom(input => input.FqaiihRmu))
            .ForMember(x => x.RoadName, options => options.MapFrom(input => input.FqaiihRoadName))
            .ForMember(x => x.Month, options => options.MapFrom(input => input.FqaiihMonth))
            .ForMember(x => x.Year, options => options.MapFrom(input => input.FqaiihYear))
            .ForMember(x => x.Section, options => options.MapFrom(input => input.FqaiihSection))
            .ForMember(x => x.CrewSup, options => options.MapFrom(input => input.FqaiihCrewSup))
            .ForMember(x => x.CrewSupName, options => options.MapFrom(input => input.FqaiihCrewSupName))
            .ForMember(x => x.Comments, options => options.MapFrom(input => input.FqaiihComments))
            .ForMember(x => x.SignQaIni, options => options.MapFrom(input => input.FqaiihSignQaIni))
            .ForMember(x => x.UseridQaIni, options => options.MapFrom(input => input.FqaiihUseridQaIni))
            .ForMember(x => x.UsernameQaIni, options => options.MapFrom(input => input.FqaiihUsernameQaIni))
            .ForMember(x => x.DesignationQaIni, options => options.MapFrom(input => input.FqaiihDesignationQaIni))
            .ForMember(x => x.RemarksQaIni, options => options.MapFrom(input => input.FqaiihRemarksQaIni))
            .ForMember(x => x.SignQaI, options => options.MapFrom(input => input.FqaiihSignQaI))
            .ForMember(x => x.UseridQaI, options => options.MapFrom(input => input.FqaiihUseridQaI))
            .ForMember(x => x.UsernameQaI, options => options.MapFrom(input => input.FqaiihUsernameQaI))
            .ForMember(x => x.DesignationQaI, options => options.MapFrom(input => input.FqaiihDesignationQaI))
            .ForMember(x => x.RemarksQaI, options => options.MapFrom(input => input.FqaiihRemarksQaI))
            .ForMember(x => x.SignQaIi, options => options.MapFrom(input => input.FqaiihSignQaIi))
            .ForMember(x => x.UseridQaIi, options => options.MapFrom(input => input.FqaiihUseridQaIi))
            .ForMember(x => x.UsernameQaIi, options => options.MapFrom(input => input.FqaiihUsernameQaIi))
            .ForMember(x => x.DesignationQaIi, options => options.MapFrom(input => input.FqaiihDesignationQaIi))
            .ForMember(x => x.RemarksQaIi, options => options.MapFrom(input => input.FqaiihRemarksQaIi))
            .ForMember(x => x.SignQaIii, options => options.MapFrom(input => input.FqaiihSignQaIii))
            .ForMember(x => x.UseridQaIii, options => options.MapFrom(input => input.FqaiihUseridQaIii))
            .ForMember(x => x.UsernameQaIii, options => options.MapFrom(input => input.FqaiihUsernameQaIii))
            .ForMember(x => x.DesignationQaIii, options => options.MapFrom(input => input.FqaiihDesignationQaIii))
            .ForMember(x => x.RemarksQaIii, options => options.MapFrom(input => input.FqaiihRemarksQaIii))
            .ForMember(x => x.SignQaIv, options => options.MapFrom(input => input.FqaiihSignQaIv))
            .ForMember(x => x.UseridQaIv, options => options.MapFrom(input => input.FqaiihUseridQaIv))
            .ForMember(x => x.UsernameQaIv, options => options.MapFrom(input => input.FqaiihUsernameQaIv))
            .ForMember(x => x.DesignationQaIv, options => options.MapFrom(input => input.FqaiihDesignationQaIv))
            .ForMember(x => x.RemarksQaIv, options => options.MapFrom(input => input.FqaiihRemarksQaIv))
            .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FqaiihModBy))
            .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FqaiihModDt))
            .ForMember(x => x.CrBy, options => options.MapFrom(input => input.FqaiihCrBy))
            .ForMember(x => x.CrDt, options => options.MapFrom(input => input.FqaiihCrDt))
            .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FqaiihSubmitSts))
            .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FqaiihActiveYn));

            CreateMap<RmFormQa2Dtl, FormQa2DtlRequestDTO>()
           .ForMember(x => x.No, options => options.MapFrom(input => input.FqaiidPkRefNo))
           .ForMember(x => x.FormQA2HeaderRefNo, options => options.MapFrom(input => input.FqaiidFqaiihPkRefNo))
           .ForMember(x => x.SourceType, options => options.MapFrom(input => input.FqaiidSourceType))
            .ForMember(x => x.S1DtlRefNo, options => options.MapFrom(input => input.FqaiidFsidPkRefNo))
            .ForMember(x => x.RefId, options => options.MapFrom(input => input.FqaiidRefId))
            .ForMember(x => x.Srno, options => options.MapFrom(input => input.FqaiidSrno))
            .ForMember(x => x.SiteRef, options => options.MapFrom(input => input.FqaiidSiteRef))
            .ForMember(x => x.FrmCh, options => options.MapFrom(input => input.FqaiidFrmCh))
            .ForMember(x => x.FrmChDeci, options => options.MapFrom(input => input.FqaiidFrmChDeci))
            .ForMember(x => x.ToCh, options => options.MapFrom(input => input.FqaiidToCh))
            .ForMember(x => x.ToChDeci, options => options.MapFrom(input => input.FqaiidToChDeci))
            .ForMember(x => x.DefCode, options => options.MapFrom(input => input.FqaiidDefCode))
            .ForMember(x => x.WrkAct, options => options.MapFrom(input => input.FqaiidWrkAct))
            .ForMember(x => x.InitialCond, options => options.MapFrom(input => input.FqaiidInitialCond))
            .ForMember(x => x.DtInitialCond, options => options.MapFrom(input => input.FqaiidDtInitialCond))
            .ForMember(x => x.QaI, options => options.MapFrom(input => input.FqaiidQaI))
            .ForMember(x => x.DtQaI, options => options.MapFrom(input => input.FqaiidDtQaI))
            .ForMember(x => x.QaIi, options => options.MapFrom(input => input.FqaiidQaIi))
            .ForMember(x => x.DtQaIi, options => options.MapFrom(input => input.FqaiidDtQaIi))
            .ForMember(x => x.QaIii, options => options.MapFrom(input => input.FqaiidQaIii))
            .ForMember(x => x.DtQaIii, options => options.MapFrom(input => input.FqaiidDtQaIii))
            .ForMember(x => x.QaIv, options => options.MapFrom(input => input.FqaiidQaIv))
            .ForMember(x => x.DtQaIv, options => options.MapFrom(input => input.FqaiidDtQaIv))
            .ForMember(x => x.DefDesc, options => options.MapFrom(input => input.FqaiidDefDesc))
            .ForMember(x => x.DimHeight, options => options.MapFrom(input => input.FqaiidRwrkDimH))
            .ForMember(x => x.DimLength, options => options.MapFrom(input => input.FqaiidRwrkDimL))
            .ForMember(x => x.DimWidth, options => options.MapFrom(input => input.FqaiidRwrkDimW))
            .ForMember(x => x.Wws13aFol, options => options.MapFrom(input => input.FqaiidWws13aFol))
            .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FqaiidRemarks))
            .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FqaiidModBy))
            .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FqaiidModDt))
            .ForMember(x => x.CrBy, options => options.MapFrom(input => input.FqaiidCrBy))
            .ForMember(x => x.CrDt, options => options.MapFrom(input => input.FqaiidCrDt))
            .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FqaiidSubmitSts))
            .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FqaiidActiveYn))
            .ForMember(x => x.IssueNCN, options => options.MapFrom(input => input.FqaiihNcnYn))
            .ForMember(x => x.QaIniType, options => options.MapFrom(input => input.FqaiidIniCycType))
            .ForMember(x => x.QaIType, options => options.MapFrom(input => input.FqaiidQaiCycType))
            .ForMember(x => x.QaIiType, options => options.MapFrom(input => input.FqaiidQaiiCycType))
            .ForMember(x => x.QaIiiType, options => options.MapFrom(input => input.FqaiidQaiiiCycType))
            .ForMember(x => x.QaIvType, options => options.MapFrom(input => input.FqaiidQaivCycType))
            .ForMember(x => x.Srno, options => options.MapFrom(input => input.FqaiidSrno));

            CreateMap<RmFormQa2Dtl, FormQa2DtlResponseDTO>()
           .ForMember(x => x.No, options => options.MapFrom(input => input.FqaiidPkRefNo))
           .ForMember(x => x.FormQA2HeaderRefNo, options => options.MapFrom(input => input.FqaiidFqaiihPkRefNo))
           .ForMember(x => x.SourceType, options => options.MapFrom(input => input.FqaiidSourceType))
            .ForMember(x => x.S1DtlRefNo, options => options.MapFrom(input => input.FqaiidFsidPkRefNo))
            .ForMember(x => x.RefId, options => options.MapFrom(input => input.FqaiidRefId))
            .ForMember(x => x.Srno, options => options.MapFrom(input => input.FqaiidSrno))
            .ForMember(x => x.SiteRef, options => options.MapFrom(input => input.FqaiidSiteRef))
            .ForMember(x => x.FrmCh, options => options.MapFrom(input => input.FqaiidFrmCh))
            .ForMember(x => x.FrmChDeci, options => options.MapFrom(input => input.FqaiidFrmChDeci))
            .ForMember(x => x.ToCh, options => options.MapFrom(input => input.FqaiidToCh))
            .ForMember(x => x.ToChDeci, options => options.MapFrom(input => input.FqaiidToChDeci))
            .ForMember(x => x.DefCode, options => options.MapFrom(input => input.FqaiidDefCode))
            .ForMember(x => x.WrkAct, options => options.MapFrom(input => input.FqaiidWrkAct))
            .ForMember(x => x.InitialCond, options => options.MapFrom(input => input.FqaiidInitialCond))
            .ForMember(x => x.DtInitialCond, options => options.MapFrom(input => input.FqaiidDtInitialCond))
            .ForMember(x => x.QaI, options => options.MapFrom(input => input.FqaiidQaI))
            .ForMember(x => x.DtQaI, options => options.MapFrom(input => input.FqaiidDtQaI))
            .ForMember(x => x.QaIi, options => options.MapFrom(input => input.FqaiidQaIi))
            .ForMember(x => x.DtQaIi, options => options.MapFrom(input => input.FqaiidDtQaIi))
            .ForMember(x => x.QaIii, options => options.MapFrom(input => input.FqaiidQaIii))
            .ForMember(x => x.DtQaIii, options => options.MapFrom(input => input.FqaiidDtQaIii))
            .ForMember(x => x.QaIv, options => options.MapFrom(input => input.FqaiidQaIv))
            .ForMember(x => x.DtQaIv, options => options.MapFrom(input => input.FqaiidDtQaIv))
            .ForMember(x => x.DefDesc, options => options.MapFrom(input => input.FqaiidDefDesc))
            .ForMember(x => x.DimHeight, options => options.MapFrom(input => input.FqaiidRwrkDimH))
            .ForMember(x => x.DimLength, options => options.MapFrom(input => input.FqaiidRwrkDimL))
            .ForMember(x => x.DimWidth, options => options.MapFrom(input => input.FqaiidRwrkDimW))
            .ForMember(x => x.Wws13aFol, options => options.MapFrom(input => input.FqaiidWws13aFol))
            .ForMember(x => x.Remarks, options => options.MapFrom(input => input.FqaiidRemarks))
            .ForMember(x => x.ModBy, options => options.MapFrom(input => input.FqaiidModBy))
            .ForMember(x => x.ModDt, options => options.MapFrom(input => input.FqaiidModDt))
            .ForMember(x => x.CrBy, options => options.MapFrom(input => input.FqaiidCrBy))
            .ForMember(x => x.CrDt, options => options.MapFrom(input => input.FqaiidCrDt))
            .ForMember(x => x.SubmitSts, options => options.MapFrom(input => input.FqaiidSubmitSts))
            .ForMember(x => x.ActiveYn, options => options.MapFrom(input => input.FqaiidActiveYn))
            .ForMember(x => x.QA2Header, options => options.MapFrom(input => input.FqaiidFqaiihPkRefNoNavigation))
            .ForMember(x => x.S1Detail, options => options.MapFrom(input => input.FqaiidFsidPkRefNoNavigation))
            .ForMember(x => x.Srno, options => options.MapFrom(input => input.FqaiidSrno));
        }
    }
}
